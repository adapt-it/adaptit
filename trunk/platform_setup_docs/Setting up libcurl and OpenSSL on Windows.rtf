{\rtf1\adeflang1025\ansi\ansicpg1252\uc1\adeff0\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f11\fmodern\fcharset128\fprq1{\*\panose 02020609040205080304}MS Mincho{\*\falt ?l?r ??\'81\'66c};}
{\f13\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}SimSun{\*\falt ??\'a8\'ac?};}{\f36\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Tahoma;}{\f47\fnil\fcharset134\fprq2{\*\panose 02010600030101010101}@SimSun;}
{\f48\fmodern\fcharset128\fprq1{\*\panose 02020609040205080304}@MS Mincho;}{\f64\froman\fcharset238\fprq2 Times New Roman CE;}{\f65\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f67\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f68\froman\fcharset162\fprq2 Times New Roman Tur;}{\f69\fbidi \froman\fcharset177\fprq2 Times New Roman (Hebrew);}{\f70\fbidi \froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f71\froman\fcharset186\fprq2 Times New Roman Baltic;}
{\f72\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}{\f74\fswiss\fcharset238\fprq2 Arial CE;}{\f75\fswiss\fcharset204\fprq2 Arial Cyr;}{\f77\fswiss\fcharset161\fprq2 Arial Greek;}{\f78\fswiss\fcharset162\fprq2 Arial Tur;}
{\f79\fbidi \fswiss\fcharset177\fprq2 Arial (Hebrew);}{\f80\fbidi \fswiss\fcharset178\fprq2 Arial (Arabic);}{\f81\fswiss\fcharset186\fprq2 Arial Baltic;}{\f82\fswiss\fcharset163\fprq2 Arial (Vietnamese);}{\f84\fmodern\fcharset238\fprq1 Courier New CE;}
{\f85\fmodern\fcharset204\fprq1 Courier New Cyr;}{\f87\fmodern\fcharset161\fprq1 Courier New Greek;}{\f88\fmodern\fcharset162\fprq1 Courier New Tur;}{\f89\fbidi \fmodern\fcharset177\fprq1 Courier New (Hebrew);}
{\f90\fbidi \fmodern\fcharset178\fprq1 Courier New (Arabic);}{\f91\fmodern\fcharset186\fprq1 Courier New Baltic;}{\f92\fmodern\fcharset163\fprq1 Courier New (Vietnamese);}{\f176\fmodern\fcharset0\fprq1 MS Mincho Western{\*\falt ?l?r ??\'81\'66c};}
{\f174\fmodern\fcharset238\fprq1 MS Mincho CE{\*\falt ?l?r ??\'81\'66c};}{\f175\fmodern\fcharset204\fprq1 MS Mincho Cyr{\*\falt ?l?r ??\'81\'66c};}{\f177\fmodern\fcharset161\fprq1 MS Mincho Greek{\*\falt ?l?r ??\'81\'66c};}
{\f178\fmodern\fcharset162\fprq1 MS Mincho Tur{\*\falt ?l?r ??\'81\'66c};}{\f181\fmodern\fcharset186\fprq1 MS Mincho Baltic{\*\falt ?l?r ??\'81\'66c};}{\f196\fnil\fcharset0\fprq2 SimSun Western{\*\falt ??\'a8\'ac?};}
{\f424\fswiss\fcharset238\fprq2 Tahoma CE;}{\f425\fswiss\fcharset204\fprq2 Tahoma Cyr;}{\f427\fswiss\fcharset161\fprq2 Tahoma Greek;}{\f428\fswiss\fcharset162\fprq2 Tahoma Tur;}{\f429\fbidi \fswiss\fcharset177\fprq2 Tahoma (Hebrew);}
{\f430\fbidi \fswiss\fcharset178\fprq2 Tahoma (Arabic);}{\f431\fswiss\fcharset186\fprq2 Tahoma Baltic;}{\f432\fswiss\fcharset163\fprq2 Tahoma (Vietnamese);}{\f433\fswiss\fcharset222\fprq2 Tahoma (Thai);}{\f536\fnil\fcharset0\fprq2 @SimSun Western;}
{\f546\fmodern\fcharset0\fprq1 @MS Mincho Western;}{\f544\fmodern\fcharset238\fprq1 @MS Mincho CE;}{\f545\fmodern\fcharset204\fprq1 @MS Mincho Cyr;}{\f547\fmodern\fcharset161\fprq1 @MS Mincho Greek;}{\f548\fmodern\fcharset162\fprq1 @MS Mincho Tur;}
{\f551\fmodern\fcharset186\fprq1 @MS Mincho Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;
\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{
\ql \li0\ri0\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1025\cgrid\langnp1033\langfenp1025 \snext0 Normal;}{
\s1\ql \fi-432\li432\ri0\sb240\sa60\keepn\widctlpar\jclisttab\tx432\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\ls1\outlinelevel0\adjustright\rin0\lin432\itap0 \rtlch\fcs1 \ab\af1\afs32\alang1025 \ltrch\fcs0 
\b\f1\fs32\lang1033\langfe1025\kerning1\cgrid\langnp1033\langfenp1025 \sbasedon0 \snext0 heading 1;}{\s2\ql \fi-576\li576\ri0\sb240\sa60\keepn\widctlpar
\jclisttab\tx576\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\ls1\ilvl1\outlinelevel1\adjustright\rin0\lin576\itap0 \rtlch\fcs1 \ab\ai\af1\afs28\alang1025 \ltrch\fcs0 \b\i\f1\fs28\lang1033\langfe1025\cgrid\langnp1033\langfenp1025 \sbasedon0 \snext0 
heading 2;}{\s3\ql \fi-720\li720\ri0\sb240\sa60\keepn\widctlpar\jclisttab\tx720\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin720\itap0 \rtlch\fcs1 \ab\af1\afs26\alang1025 \ltrch\fcs0 
\b\f1\fs26\lang1033\langfe1025\cgrid\langnp1033\langfenp1025 \sbasedon0 \snext0 heading 3;}{\*\cs10 \additive Default Paragraph Font;}{\*
\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\tblind0\tblindtype3\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\wrapdefault\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs20 \ltrch\fcs0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}{\*\cs15 \additive \rtlch\fcs1 \af0 
\ltrch\fcs0 \ul\cf2 \sbasedon10 Hyperlink;}{\*\cs16 \additive \rtlch\fcs1 \af0 \ltrch\fcs0 \ul\cf13\lang255\langfe255\langnp255\langfenp255 \sbasedon10 FollowedHyperlink;}{\*\cs17 \additive Numbering Symbols;}{
\s18\ql \li0\ri0\sb240\sa120\keepn\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af36\afs28\alang1025 \ltrch\fcs0 \fs28\lang1033\langfe1025\loch\f1\hich\af1\dbch\af11\cgrid\langnp1033\langfenp1025 
\sbasedon0 \snext19 Heading;}{\s19\ql \li0\ri0\sa120\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 
\fs24\lang1033\langfe1025\loch\f0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1025 \sbasedon0 \snext19 Body Text;}{\s20\ql \li0\ri0\sa120\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af36\afs24\alang1025 
\ltrch\fcs0 \fs24\lang1033\langfe1025\loch\f0\hich\af0\dbch\af13\cgrid\langnp1033\langfenp1025 \sbasedon19 \snext20 List;}{\s21\ql \li0\ri0\sb120\sa120\widctlpar\noline\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 
\ai\af36\afs24\alang1025 \ltrch\fcs0 \i\fs24\lang1033\langfe1025\cgrid\langnp1033\langfenp1025 \sbasedon0 \snext21 caption;}{\s22\ql \li0\ri0\widctlpar\noline\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 
\af36\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1025\cgrid\langnp1033\langfenp1025 \sbasedon0 \snext22 Index;}}{\*\latentstyles\lsdstimax156\lsdlockeddef0}{\*\listtable{\list\listtemplateid1{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0
\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-432\li432\jclisttab\tx432\lin432 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1
\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-576\li576\jclisttab\tx576\lin576 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0
{\leveltext\'00;}{\levelnumbers;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-720\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}
\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-864\li864\jclisttab\tx864\lin864 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\rtlch\fcs1 \af0 \ltrch\fcs0 
\hres0\chhres0 \fi-1008\li1008\jclisttab\tx1008\lin1008 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 
\fi-1152\li1152\jclisttab\tx1152\lin1152 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-1296\li1296
\jclisttab\tx1296\lin1296 }{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-1440\li1440\jclisttab\tx1440\lin1440 }
{\listlevel\levelnfc255\levelnfcn255\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'00;}{\levelnumbers;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-1584\li1584\jclisttab\tx1584\lin1584 }{\listname ;}\listid1}
{\list\listtemplateid2\listsimple{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-360\li720
\jclisttab\tx720\lin720 }{\listname WW8Num2;}\listid2}{\list\listtemplateid3{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat35\levelspace0\levelindent0{\leveltext\'02\'00.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 
\hres0\chhres0 \fi-360\li720\jclisttab\tx720\lin720 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'01.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 
\fi-360\li1080\jclisttab\tx1080\lin1080 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'02.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-360\li1440
\jclisttab\tx1440\lin1440 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'03.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-360\li1800
\jclisttab\tx1800\lin1800 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'04.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-360\li2160
\jclisttab\tx2160\lin2160 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'05.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-360\li2520
\jclisttab\tx2520\lin2520 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'06.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-360\li2880
\jclisttab\tx2880\lin2880 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'07.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-360\li3240
\jclisttab\tx3240\lin3240 }{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace0\levelindent0{\leveltext\'02\'08.;}{\levelnumbers\'01;}\rtlch\fcs1 \af0 \ltrch\fcs0 \hres0\chhres0 \fi-360\li3600
\jclisttab\tx3600\lin3600 }{\listname ;}\listid3}}{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}}{\*\rsidtbl \rsid3085323\rsid8351944
\rsid10375345\rsid14683991}{\*\generator Microsoft Word 11.0.0000;}{\info{\title Setting up libcurl and OpenSSL on Windows}{\author Bill Martin}{\operator Bill Martin}{\creatim\yr2011\mo8\dy14\hr13\min17}{\revtim\yr2012\mo8\dy23\hr8\min27}{\version4}
{\edmins38}{\nofpages9}{\nofwords2990}{\nofchars17045}{\*\company SIL}{\nofcharsws19996}{\vern24615}{\*\password 00000000}}{\*\xmlnstbl {\xmlns1 http://schemas.microsoft.com/office/word/2003/wordml}}
\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect 
\widowctrl\ftnbj\aenddoc\donotembedsysfont0\donotembedlingdata1\grfdocevents0\validatexml1\showplaceholdtext0\ignoremixedcontent0\saveinvalidxml0\showxmlerrors1\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\formshade\horzdoc\dghspace0\dgvspace0
\dghorigin0\dgvorigin0\dghshow0\dgvshow0\jexpand\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot\splytwnine\ftnlytwnine\htmautsp\nolnhtadjtbl\useltbaln\alntblind\lytcalctblwd\lyttblrtgr\lnbrkrule\nobrkwrptbl\snaptogridincell\allowfieldendsel\wrppunct
\asianbrkrule\rsidroot8351944\viewbksp1 \fet0{\*\wgrffmtfilter 0000}\ilfomacatclnup0\ltrpar \sectd \ltrsect\linex0\endnhere\sectlinegrid360\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnqc\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2
\pnucltr\pnqc\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnqc\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4\pnlcltr\pnqc\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnqc\pnstart1\pnindent720\pnhang {\pntxtb (}
{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnqc\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnqc\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnqc\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}
{\*\pnseclvl9\pnlcrm\pnqc\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\listtext\tab}\pard\plain \ltrpar\s1\qc \fi-432\li432\ri0\sb240\sa60\keepn\widctlpar
\jclisttab\tx432\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\ls1\outlinelevel0\adjustright\rin0\lin432\itap0 \rtlch\fcs1 \ab\af1\afs32\alang1025 \ltrch\fcs0 \b\f1\fs32\lang1033\langfe1025\kerning1\cgrid\langnp1033\langfenp1025 {\rtlch\fcs1 \af1 
\ltrch\fcs0 \insrsid8351944 Setting up libcurl and OpenSSL on Windows
\par }\pard\plain \ltrpar\qc \li0\ri0\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1025\cgrid\langnp1033\langfenp1025 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\insrsid8351944 By Bill Martin (February 2011)
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
\par On Linux systems and on Mac OS X, libcurl and the Secure Sockets Layer (SSL) either already exist, or are easily added binary packages \endash  ready to use. Getting libcurl and SSL set up on a Windows development system is a different story!
\par 
\par There are }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 four}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  things needed on a Windows machine to build libcurl with SSL support:
\par {\pntext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \lang1033\langfe1025\langfenp1025\insrsid8351944 \hich\af0\dbch\af0\loch\f0 1.\tab}}\pard \ltrpar\ql \fi-360\li720\ri0\widctlpar\jclisttab\tx720\wrapdefault{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0
\pndec\pnstart1\pnindent360\pnsp120\pnhang {\pntxta .}}\hyphpar0\aspalpha\aspnum\faauto\ls2\adjustright\rin0\lin720\itap0 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 Downloading and installing ActivePerl
\par {\pntext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \lang1033\langfe1025\langfenp1025\insrsid8351944 \hich\af0\dbch\af0\loch\f0 2.\tab}}\pard \ltrpar\ql \fi-360\li720\ri0\widctlpar\jclisttab\tx720\wrapdefault{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0
\pndec\pnstart1\pnindent360\pnsp120\pnhang {\pntxta .}}\hyphpar0\aspalpha\aspnum\faauto\ls2\adjustright\rin0\lin720\itap0 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 Downloading and set up of Netwide Assembler (nasm)
\par {\pntext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \lang1033\langfe1025\langfenp1025\insrsid8351944 \hich\af0\dbch\af0\loch\f0 3.\tab}}\pard \ltrpar\ql \fi-360\li720\ri0\widctlpar\jclisttab\tx720\wrapdefault{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0
\pndec\pnstart1\pnindent360\pnsp120\pnhang {\pntxta .}}\hyphpar0\aspalpha\aspnum\faauto\ls2\adjustright\rin0\lin720\itap0 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 Downloading and building the OpenSSL library
\par {\pntext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \lang1033\langfe1025\langfenp1025\insrsid8351944 \hich\af0\dbch\af0\loch\f0 4.\tab}}\pard \ltrpar\ql \fi-360\li720\ri0\widctlpar\jclisttab\tx720\wrapdefault{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0
\pndec\pnstart1\pnindent360\pnsp120\pnhang {\pntxta .}}\hyphpar0\aspalpha\aspnum\faauto\ls2\adjustright\rin0\lin720\itap0 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 Downloading and building the libcurl library
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
\par The instructions below tell how to download the above 4 libraries/programs to a temporary place on your Windows development machine and how to get the build environments set up to use them with Visual Studio 2008 on Windows. Handle them in the order 
listed above. Install }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 ActivePerl}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  and the }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 Netwide Assembler (nasm)}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\insrsid8351944  first before installing and setting up the other libraries. Next install and setup the }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 OpenSSL}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
 library which is a dependency needed by the libcurl library. Finally install and setup the }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 libcurl}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  library itself.
\par {\listtext\tab}}\pard\plain \ltrpar\s3\ql \fi-720\li720\ri0\sb240\sa60\keepn\widctlpar\jclisttab\tx720\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin720\itap0 \rtlch\fcs1 \ab\af1\afs26\alang1025 \ltrch\fcs0 
\b\f1\fs26\lang1033\langfe1025\cgrid\langnp1033\langfenp1025 {\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid8351944 ActivePerl
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1025\cgrid\langnp1033\langfenp1025 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\insrsid8351944 Download the latest distribution from: }{\field{\*\fldinst {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  HYPERLINK "http://www.activestate.com/activeperl/downloads"}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid10375345 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b6000000068007400740070003a002f002f007700770077002e00610063007400690076006500730074006100740065002e0063006f006d002f006100630074006900760065007000650072006c002f0064006f007700
6e006c006f00610064007300000000}}}{\fldrslt {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs15\f2\ul\cf2\insrsid8351944 http://www.activestate.com/activeperl/downloads}}}\sectd \ltrsect\linex0\endnhere\sectlinegrid360\sectdefaultcl\sftnbj {\rtlch\fcs1 \af2\afs20 
\ltrch\fcs0 \b\f2\fs20\insrsid8351944  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 to a temporary directory. Use the download button to get the Windows (x86). The name of the installer will be something like: }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 
\b\f2\fs20\insrsid8351944 ActivePerl-5.12.3.1204-MSWin32-x86-294330.msi}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 . Run the installer accepting the default setup options. Note that the installer should \'93Add Perl to the PATH environment variable\'94
 during the install. You can check that the installation was successful by invoking a Command window (}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 Start > Run > cmd}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 ) and typing the command: }{\rtlch\fcs1 
\af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid8351944 perl \endash v}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944   followed by Enter. If the installation and setting of the PATH were successful you should see the program display its name and ver
sion number, copyright, etc.
\par {\listtext\tab}}\pard\plain \ltrpar\s3\ql \fi-720\li720\ri0\sb240\sa60\keepn\widctlpar\jclisttab\tx720\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin720\itap0 \rtlch\fcs1 \ab\af1\afs26\alang1025 \ltrch\fcs0 
\b\f1\fs26\lang1033\langfe1025\cgrid\langnp1033\langfenp1025 {\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid8351944 Netwide Assembler (NASM)
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1025\cgrid\langnp1033\langfenp1025 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\insrsid8351944 Download the latest distribution from:
\par }{\field{\*\fldinst {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  HYPERLINK "http://www.nasm.us/pub/nasm/releasebuilds/2.09.05/win32/"}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid10375345 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b7200000068007400740070003a002f002f007700770077002e006e00610073006d002e00750073002f007000750062002f006e00610073006d002f00720065006c0065006100730065006200750069006c0064007300
2f0032002e00300039002e00300035002f00770069006e00330032002f00000000}}}{\fldrslt {\rtlch\fcs1 \af0 \ltrch\fcs0 \cs15\ul\cf2\insrsid8351944 http://www.nasm.us/pub/nasm/releasebuilds/2.09.05/win32/}}}\sectd \ltrsect
\linex0\endnhere\sectlinegrid360\sectdefaultcl\sftnbj {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944   to a temporary directory. You sh
ould download the latest installer which will be named something like: nasm-2.09.05-installer.exe. Run the nasm-2.09.05-installer.exe to install NASM on your Windows development computer. Accept all the selected components. Insure that the \'93
VS8 integration\'94 component is selected at the Choose Components page of the installer. Although the use of NASM is optional we are using it to build support for fast SSL operations in OpenSSL.
\par The location of }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 nasm.exe}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  needs to be added to the Windows }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 PATH}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
. Use Windows explorer to find the exact location of the nasm.exe executable file. 
\par On Windows 7 systems it seems to go in the user's AppData folder:
\par }{\rtlch\fcs1 \af0\afs20 \ltrch\fcs0 \f2\fs20\insrsid8351944 c}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid8351944 :\\Users\\<user>\\AppData\\Local\\nasm
\par }{\rtlch\fcs1 \af2 \ltrch\fcs0 \insrsid8351944 On Windows Vista systems, however, it seems to get installed in:
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid8351944 c:\\Program Files\\nasm
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 The Windows PATH environment variable will need the actual path to the folder where your nasm.exe is located.
\par Go to }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 Start > Control Panel > System > Advanced system settings}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  and click on the \'93}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 Environment Variables}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 \'94 button. Then add the path separated by a semi-colon to the end of the existing Path values in the \'93System variables\'94 part:
\par (Note: If using Windows 7, <user> will be your own user name. Mine is \'93Bill Martin\'94 so my addition to the Path values would be \'93}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid8351944 ;C:\\Users\\Bill Martin\\AppData\\Local\\nasm}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 \'94 [Note the string begins with a semi-colon to separate it from previous designated paths].
\par Important: If Visual Studio 2008 was running while you augmented the system Path you will need to quit and restart Visual Studio for the Path additions to be recognized (
i.e., when invoking the Visual Studio 2008 Command Prompt in the next step during OpenSSL setup). 
\par As with the Perl installation above, you should test that the nasm.exe is on the executable path. Invoke }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid8351944 Start > Run > cmd}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
 to get a command window, and then type:
\par 
\par }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\f2\insrsid8351944 nasm -v
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
\par You should see it respond with something like \'93NASM version 2.09.05 compiled on Feb 20 2011\'94. If you get no response it is either not installed or the augmented path is not correct. 
Make sure nasm.exe is available from a command window before proceeding to the next step.
\par {\listtext\tab}}\pard\plain \ltrpar\s3\ql \fi-720\li720\ri0\sb240\sa60\keepn\widctlpar\jclisttab\tx720\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin720\itap0 \rtlch\fcs1 \ab\af1\afs26\alang1025 \ltrch\fcs0 
\b\f1\fs26\lang1033\langfe1025\cgrid\langnp1033\langfenp1025 {\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid8351944 The OpenSSL library
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1025\cgrid\langnp1033\langfenp1025 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\insrsid8351944 Security stuff is by nature rather complex, therefore getting OpenSSL built and set up is the most complicated of the steps described here, so follow the steps closely.
\par Download the latest distribution tarball from: }{\field{\*\fldinst {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  HYPERLINK "http://www.openssl.org/source/"}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid10375345 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b3e00000068007400740070003a002f002f007700770077002e006f00700065006e00730073006c002e006f00720067002f0073006f0075007200630065002f00000000}}}{\fldrslt {\rtlch\fcs1 \af0 
\ltrch\fcs0 \cs15\f2\ul\cf2\insrsid8351944 http://www.openssl.org/source/}}}\sectd \ltrsect\linex0\endnhere\sectlinegrid360\sectdefaultcl\sftnbj {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
 to a temporary directory. The tarball will be called something like: }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid8351944 openssl-1.0.0d.tar.gz
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 Right click on the }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid8351944 openssl-1.0.0d.tar.gz}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  file and from the Windows Explorer popup menu, select }{
\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 7-zip > Extract Here (}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 assumes you have 7-zip installed). You will see a file in the same folder called }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 
\b\f2\fs20\insrsid8351944 openssl-1.0.0d.tar.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  Right-click on the }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid8351944 openssl-1.0.0d.tar}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
 file and select }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 7-zip > Extract Here}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 , and you should see a new folder called }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid8351944 openssl-1.0.0d}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 .You can remove the .tar and .tar.gz files. Copy or Move the }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid8351944 openssl-1.0.0d}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
 folder and contents to the }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 c:\\ }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 root folder}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
on your hard drive. The reason for this is that some components in the scripts that will be used don\rquote t handle paths that have spaces within them very well. The }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid8351944 openssl-1.0.0d}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  folder should now be located at }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid8351944 C:\\openssl-1.0.0d}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 .
\par 
\par The next step in building OpenSSL requires that ActivePerl be already installed (see above). These instructions come mainly from the }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid8351944 INSTALL.W32}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
 file in the }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid8351944 openssl-1.0.0d}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  folder. 
\par 
\par Launch a Command Prompt by invoking }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 Start > Run }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 and typing}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944  cmd}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
 then Enter. 
\par 
\par At the command prompt change to the openssl-1.0.0d folder, i.e., 
\par 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid8351944 cd C:\\openssl-1.0.0d
\par 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 Then type the following command at the prompt to run Configure for the VC-WIN32 platform:
\par 
\par }{\rtlch\fcs1 \af2\afs18 \ltrch\fcs0 \b\f2\fs18\insrsid8351944 perl Configure VC-WIN32 --prefix=C:\\openssl-1.0.0d
\par 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 The output should have about 43 lines of output and look similar to the following:
\par 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid8351944 Configuring for VC-WIN32
\par     no-gmp          [default]  OPENSSL_NO_GMP (skip dir)
\par     no-jpake        [experimental] OPENSSL_NO_JPAKE (skip dir)
\par     no-krb5         [krb5-flavor not specified] OPENSSL_NO_KRB5
\par     no-md2          [default]  OPENSSL_NO_MD2 (skip dir)
\par     no-rc5          [default]  OPENSSL_NO_RC5 (skip dir)
\par     no-rfc3779      [default]  OPENSSL_NO_RFC3779 (skip dir)
\par     no-shared       [default]
\par     no-store        [experimental] OPENSSL_NO_STORE (skip dir)
\par     no-zlib         [default]
\par     no-zlib-dynamic [default]
\par IsMK1MF=1
\par CC            =cl
\par CFLAG         =-DOPENSSL_THREADS  -DDSO_WIN32 -W3 -WX -Gs0 -GF -Gy -nologo -DOP
\par NSSL_SYSNAME_WIN32 -DWIN32_LEAN_AND_MEAN -DL_ENDIAN -D_CRT_SECURE_NO_DEPRECATE
\par DOPENSSL_BN_ASM_PART_WORDS -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DSHA1_ASM
\par -DSHA256_ASM -DSHA512_ASM -DMD5_ASM -DRMD160_ASM -DAES_ASM -DWHIRLPOOL_ASM
\par EX_LIBS       =
\par CPUID_OBJ     =x86cpuid.o
\par BN_ASM        =bn-586.o co-586.o x86-mont.o
\par DES_ENC       =des-586.o crypt586.o
\par AES_ENC       =aes-586.o
\par BF_ENC        =bf-586.o
\par CAST_ENC      =cast-586.o
\par RC4_ENC       =rc4-586.o
\par RC5_ENC       =rc5-586.o
\par MD5_OBJ_ASM   =md5-586.o
\par SHA1_OBJ_ASM  =sha1-586.o sha256-586.o sha512-586.o
\par RMD160_OBJ_ASM=rmd-586.o
\par CMLL_ENC=     =cmll-x86.o
\par PROCESSOR     =
\par RANLIB        =true
\par ARFLAGS       =
\par PERL          =perl
\par THIRTY_TWO_BIT mode
\par BN_LLONG mode
\par RC4_INDEX mode
\par RC4_CHUNK is undefined
\par 
\par Configured for VC-WIN32.
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
\par Next, type the following command at the prompt to build the Makefiles and the assembly language files:
\par 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid8351944 ms\\do_nasm
\par 
\par (Note: There is an underscore between do and nasm. There are no spaces.)
\par 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 You should see 6 lines of output and no errors. Output should look similar to this:
\par 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid8351944 c:\\openssl-1.0.0d>perl util\\mkfiles.pl  1>MINFO
\par c:\\openssl-1.0.0d>perl util\\mk1mf.pl nasm VC-WIN32  1>ms\\nt.mak
\par c:\\openssl-1.0.0d>perl util\\mk1mf.pl dll nasm VC-WIN32  1>ms\\ntdll.mak
\par c:\\openssl-1.0.0d>perl util\\mk1mf.pl nasm BC-NT  1>ms\\bcb.mak
\par c:\\openssl-1.0.0d>perl util\\mkdef.pl 32 libeay  1>ms\\libeay32.def
\par c:\\openssl-1.0.0d>perl util\\mkdef.pl 32 ssleay  1>ms\\ssleay32.def
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
\par Next, quit Visual Studio 2008 (if it was currently running) and start it up afresh.
\par 
\par Select the }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 Tools}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  menu and \'93}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 Visual Studio 2008 Command Prompt}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
\'94. A new Command Prompt window will open. We use Visual Studio\rquote s command prompt which knows how to find its nmake command line application. In this new VS2008 command prompt, change to the openssl folder in the root of the hard drive by typing:

\par 
\par }{\rtlch\fcs1 \af2\afs18 \ltrch\fcs0 \b\f2\fs18\insrsid8351944 cd C:\\openssl-1.0.0d
\par 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 Then type the following at the Visual Studio 2008 Command Prompt:
\par }{\rtlch\fcs1 \af2\afs18 \ltrch\fcs0 \b\f2\fs18\insrsid8351944 
\par nmake \endash f ms\\ntdll.mak
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
\par The above command will generate a lot of output for several minutes as it compiles and builds the OpenSSL library. About five lines from the end of output you should see a \'93link \'85\'94 command, and three lines from the end of output, you 
should see, a \'93Creating library \'85\'94 command.
\par 
\par Now, to install OpenSSL to the specified location repeat the same command above adding a space and the word }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid8351944 install}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
 at the end of the command (Note: you should be able to recall the last command by pressing the }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid8351944 Up Arrow}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 , add a space and add the word }{\rtlch\fcs1 
\ab\af0 \ltrch\fcs0 \b\insrsid8351944 install}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  then press }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid8351944 Enter}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  to execute the command):
\par 
\par }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid8351944 nmake \endash f ms\\ntdll.mak install
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
\par The output from this command starts with \'93Building OpenSSL\'94; it creates the }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 bin}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  and }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 lib}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \insrsid8351944  directories as children of the openssl-1.0.0d folder and copies about 80 items to those directories; creates a }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 lib\\engines}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
 folder and copies another dozen or so dlls to those directories.
\par 
\par You should test the build by giving this command in the command window:
\par 
\par }{\rtlch\fcs1 \af2\afs18 \ltrch\fcs0 \b\f2\fs18\insrsid8351944 nmake \endash f ms\\ntdll.mak test
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
\par The test program generates a lot of output and exercises the various OpenSSL features (it doesn\rquote t require any input from you at this point). You should see \'93}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 passed all tests}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid8351944 \'94 at the end of the output.
\par 
\par You have built the }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 dll}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  form of the OpenSSL library. You should also now build the }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 static}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid8351944  library. This involves repeating the nmake commands above but calling a different Makefile (nt.mak). Here are the steps to create the static library:
\par 
\par }{\rtlch\fcs1 \af2\afs18 \ltrch\fcs0 \b\f2\fs18\insrsid8351944 nmake \endash f ms\\nt.mak
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
\par }{\rtlch\fcs1 \af2\afs18 \ltrch\fcs0 \b\f2\fs18\insrsid8351944 nmake \endash f ms\\nt.mak install
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
\par }{\rtlch\fcs1 \af2\afs18 \ltrch\fcs0 \b\f2\fs18\insrsid8351944 nmake \endash f ms\\nt.mak test
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
\par The outputs for the static library should look similar to the previous outputs you saw when creating the dll library.
\par 
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid3085323 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
[Note: we could also build a debug version of OpenSSL as described in INSTALL.W32 but I don\rquote t anticipate that we would need to do any debugging of the OpenSSL library itself during Adapt It development.}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\insrsid3085323  But if you want to avoid a Link error in Debug builds repeat the above by changing the first Configure step, i.e.,: 
\par 
\par }{\rtlch\fcs1 \af2\afs18 \ltrch\fcs0 \b\f2\fs18\insrsid3085323\charrsid3085323 perl Configure }{\rtlch\fcs1 \af2\afs18 \ltrch\fcs0 \b\f2\fs18\highlight7\insrsid3085323\charrsid3085323 debug-}{\rtlch\fcs1 \af2\afs18 \ltrch\fcs0 
\b\f2\fs18\insrsid3085323\charrsid3085323 VC-WIN32 --prefix=C:\\openssl-1.0.0d
\par }{\rtlch\fcs1 \af2\afs18 \ltrch\fcs0 \b\f2\fs18\insrsid3085323 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid3085323\charrsid3085323 Note: The only difference is the debug-VC-WIN32 part of the perl command has \'93}{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid3085323\charrsid3085323 debug-}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\insrsid3085323\charrsid3085323 \'93 prefixed to }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid3085323 VC-WIN32}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid3085323\charrsid3085323 . No further changes are needed within Visual Studio\rquote 
s Debug build of Adapt It to use the debug version}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid14683991 
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0\pararsid14683991 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid14683991 We do not build a 64-bit specific version of Adapt It for Windows. 
The 32-bit version should work on 64-bit Windows systems, therefore I believe that there is no necessity of building a 64-bit specific version of the OpenSSL library.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 ]
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
\par {\listtext\tab}}\pard\plain \ltrpar\s3\ql \fi-720\li720\ri0\sb240\sa60\keepn\widctlpar\jclisttab\tx720\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin720\itap0 \rtlch\fcs1 \ab\af1\afs26\alang1025 \ltrch\fcs0 
\b\f1\fs26\lang1033\langfe1025\cgrid\langnp1033\langfenp1025 {\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid8351944 Setup OPENSSL and LIBCURL Environment Variables
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1025\cgrid\langnp1033\langfenp1025 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\insrsid8351944 Add an }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid8351944 OPENSSL}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
 environment variable to the Control Panel's System Properties (Advanced Tab > Environment Variables). Assign the path to the openssl-1.0.0d folder (}{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid8351944 c:\\openssl-1.0.0d}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\insrsid8351944 ) as the value for OPENSSL. While you are setting environment variables, go ahead and add another one called }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid8351944 LIBCURL}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
, and assign it the path }{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid8351944 c:\\curl-7.21.4}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
. Click OK twice to close the System Properties dialogs. Remember that Visual Studio will only recognize environment variables that are set before it is invoked.
\par {\listtext\tab}}\pard\plain \ltrpar\s3\ql \fi-720\li720\ri0\sb240\sa60\keepn\widctlpar\jclisttab\tx720\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\ls1\ilvl2\outlinelevel2\adjustright\rin0\lin720\itap0 \rtlch\fcs1 \ab\af1\afs26\alang1025 \ltrch\fcs0 
\b\f1\fs26\lang1033\langfe1025\cgrid\langnp1033\langfenp1025 {\rtlch\fcs1 \af1 \ltrch\fcs0 \insrsid8351944 The libcurl library
\par }\pard\plain \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \rtlch\fcs1 \af0\afs24\alang1025 \ltrch\fcs0 \fs24\lang1033\langfe1025\cgrid\langnp1033\langfenp1025 {\rtlch\fcs1 \af0 \ltrch\fcs0 
\insrsid8351944 Download the latest distribution from: }{\field{\*\fldinst {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  HYPERLINK "http://curl.haxx.se/download.html"}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid10375345 {\*\datafield 
00d0c9ea79f9bace118c8200aa004ba90b0200000003000000e0c9ea79f9bace118c8200aa004ba90b4400000068007400740070003a002f002f006300750072006c002e0068006100780078002e00730065002f0064006f0077006e006c006f00610064002e00680074006d006c00000000}}}{\fldrslt {\rtlch\fcs1 
\af0 \ltrch\fcs0 \cs15\f2\ul\cf2\insrsid8351944 http://curl.haxx.se/download.html}}}\sectd \ltrsect\linex0\endnhere\sectlinegrid360\sectdefaultcl\sftnbj {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
 to a temporary directory. You can download it in zip format which will be called something like: }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid8351944 curl-7.21.4.zip}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 . Right-click on the }{
\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid8351944 curl-7.21.4.zip}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  file and select }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 7-zip > Extract Here}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\insrsid8351944 . You should now see a new folder called }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 curl-7.21.4}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
. You can remove the zip file. Note: If the version of curl you have downloaded is different from that described above, you will need to adjust the LIBCURL environment variable's value that you set in the previous section.
\par 
\par These instructions come partly from the \'93MSVC from command line\'94 section of the INSTALL file in the docs folder of the curl-7.21.4 folder, and partly from the following sources on the Internet (Note: a through d below are no
t necessary reading unless you are interested):
\par 
\par }\pard \ltrpar\ql \li720\ri0\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin720\itap0 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 a. Tutorial about building and using libcurl in Visual Studio:
\par     http://curl.haxx.se/libcurl/c/visual_studio.pdf
\par 
\par b. Some other information related to getting libcurl to build on Windows with SSL support:
\par     http://stackoverflow.com/questions/197444/building-libcurl-with-ssl-support-on-windows
\par     http://stackoverflow.com/questions/2884505/building-curl-libcurl-with-visual-studio-2010
\par 
\par c. Building libcurl with SSH support. The SSH support is not relevant but he also goes into detail about building openssl:
\par     http://curl.haxx.se/libcurl/c/Using-libcurl-with-SSH-support-in-Visual-Studio-2008.pdf
\par 
\par d. Email discussion about issues that might happen when building libcurl with SSL on Windows:
\par     http://curl.haxx.se/mail/lib-2005-10/0156.html
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
\par It is possible to again use the Visual Studio 2008 Command Prompt to build the libcurl libraries, but I found that it worked better for me to build libcurl from within the Visual Studio 2008\rquote s IDE starting with a Visual St
udio 6 project file supplied with the libcurl library. Here are the steps I used:
\par 
\par }\pard \ltrpar\ql \fi-432\li432\ri0\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin432\itap0 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 1. After downloading the curl-7.21.4.zip file, unzip it with 7zip, and copy or move the }
{\rtlch\fcs1 \ab\af0 \ltrch\fcs0 \b\insrsid8351944 curl-7.21.4}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  folder to the root of the hard drive c: so it resides at }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid8351944 c:\\curl-7.21.4}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 . The curl-7.21.4 folder will now be a sister folder of the openssl-1.0.0d folder (created in the previous section), both folders residing off the root of the hard drive.
\par 2. Start Visual Studio 2008 and select }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 File > Open > Project/Solution...
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 3. Navigate to the }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid8351944 c:\\curl-7.21.4/lib}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  folder and select the }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 
\b\f2\fs20\insrsid8351944 libcurl.vcproj}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  file. Allow it to upgrade the project to a VS 2008 project.
\par 4. Right-click on the }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 libcurl}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  project in the solution explorer and select "}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 Properties}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid8351944 ".
\par 5. Select }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 Debug}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  from the Configuration drop down list.
\par 6. Select }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 C/C++ > General}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 . Click in the }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 Additional Include Directories}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\insrsid8351944  edit box and click the }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 "..."}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  button at right.
\par 7. Add this directory search path: }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid8351944 $(OPENSSL)\\include
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 8. Select }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 C/C++ > Preprocessor}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 . Click in the }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 
Preprocessor Definitions}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  edit box and click the }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 "..."}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  button at right.
\par 9. }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 Remove}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  the }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 _USRDLL}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  define and }{\rtlch\fcs1 \af0 
\ltrch\fcs0 \b\insrsid8351944 add}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  in its place }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 CURL_STATICLIB}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 .
\par 10. Also }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 add}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  these preprocessor definitions on separate lines: }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 USE_SSLEAY}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\insrsid8351944  and }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 USE_OPENSSL 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 11. Select }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 C/C++ > Code Generation}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  and change the }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 Ru
ntime Library}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  to "}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 Multi-threaded Debug (/MTd)}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 "
\par 12. Click "}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 Apply}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 " at bottom of the dialog.
\par 13. Select the }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 Release}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  from the Configuration drop down list.
\par 14. Select }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 C/C++ > General}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 . Click in the }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 Additional Include Directories}{\rtlch\fcs1 \af0 \ltrch\fcs0 
\insrsid8351944  edit box and click the }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 "..."}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  button at right.
\par 15. Add this directory search path: }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 $(OPENSSL)\\include
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 16. Select }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 C/C++ > Preprocessor}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 . Click in the }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 
Preprocessor Definitions}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  edit box and click the }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 "..."}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  button at right.
\par 17. }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 Remove}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  the }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 _USRDLL}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  define and add in its place }{
\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 CURL_STATICLIB
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 18. Also }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 add}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  these preprocessor definitions on separate lines: }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 
USE_SSLEAY}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  and }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 USE_OPENSSL
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 19. Select }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 C/C++ > Code Generation}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  and change the }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 
Runtime Library}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  to "}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 Multi-threaded (/MT)"
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 20. Click "}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 Apply}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 " at bottom of the dialog and OK.
\par 21. Select }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 Debug}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  from the Configuration drop down list.
\par 22. Select }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 Build Solution}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  from the }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 Build}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
 menu. The build should succeed without errors or warnings. There should be a new folder called Debug at }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid8351944 c:\\curl-7.21.4\\Debug}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
 that contains a library file called }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid8351944 libcurl.lib}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  (about 2MB
 in size). If you get errors it probably means that the OPENSSL environment variable was not set correctly in the section above, or Visual Studio was started before the environment variable was set.
\par 23. Select }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 Release}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  from the Configuration drop down list.
\par 24. Select }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 Build Solution}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  from the }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 Build}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
 menu. The build should succeed without errors or warnings. There should be a new folder called Release at }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid8351944 c:\\curl-7.21.4\\Release}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
 that contains a library file called }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid8351944 libcurl.lib}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  (about 2.1MB in size). Again, if you 
get errors it probably means that the OPENSSL environment variable was not set correctly in the section above, or Visual Studio was started before the environment variable was set.
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 
\par NOTE: Steps 25 through 34 below have ALREADY been done}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 in the Visual Studi
o 2008 project, so when you get the Visual Studio project file from svn steps 25 through 34 will already have been done for you. I list them here so you can see what has been done to the Visual Studio\rquote 
s Adapt_It project properties. Skip to step 35 below, where you will see the last step in the process that has already been done.
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \i\insrsid8351944 25. Open the Adapt It (}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\i\insrsid8351944 ai_codefixes}{\rtlch\fcs1 \af0 \ltrch\fcs0 \i\insrsid8351944 ) project in Visual Studio 2008.
\par 26. Right click on the }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\i\insrsid8351944 Adapt_It}{\rtlch\fcs1 \af0 \ltrch\fcs0 \i\insrsid8351944  project in the solution explorer and select "}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\i\insrsid8351944 Properties}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \i\insrsid8351944 ".
\par 27. Select }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\i\insrsid8351944 Unicode Debug}{\rtlch\fcs1 \af0 \ltrch\fcs0 \i\insrsid8351944  from the Configuration drop down list.
\par 28. Add the following lib files to }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\i\insrsid8351944 Linker > Input > Additional Dependencies}{\rtlch\fcs1 \af0 \ltrch\fcs0 \i\insrsid8351944 : }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\i\f2\fs20\insrsid8351944 
wldap32.lib libcurl.lib libeay32.lib ssleay32.lib}{\rtlch\fcs1 \af0 \ltrch\fcs0 \i\insrsid8351944 . Change }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\i\f2\fs20\insrsid8351944 wsock32.lib}{\rtlch\fcs1 \af0 \ltrch\fcs0 \i\insrsid8351944  dependency to use }{
\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\i\f2\fs20\insrsid8351944 ws2_32.lib}{\rtlch\fcs1 \af0 \ltrch\fcs0 \i\insrsid8351944  instead.
\par 29. Click "}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\i\insrsid8351944 Apply}{\rtlch\fcs1 \af0 \ltrch\fcs0 \i\insrsid8351944 " at the bottom of the dialog.
\par 30. Select }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\i\insrsid8351944 Build Solution}{\rtlch\fcs1 \af0 \ltrch\fcs0 \i\insrsid8351944  from the }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\i\insrsid8351944 Build}{\rtlch\fcs1 \af0 \ltrch\fcs0 \i\insrsid8351944  menu. 
\par 31. Select }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\i\insrsid8351944 Unicode Release}{\rtlch\fcs1 \af0 \ltrch\fcs0 \i\insrsid8351944  from the Configuration drop down list.
\par 32. Add the following lib files }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\i\insrsid8351944 to Linker > Input > Additional Dependencies}{\rtlch\fcs1 \af0 \ltrch\fcs0 \i\insrsid8351944 : }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\i\f2\fs20\insrsid8351944 
wldap32.lib libcurl.lib libeay32.lib ssleay32.lib}{\rtlch\fcs1 \af0 \ltrch\fcs0 \i\insrsid8351944 . Change }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\i\f2\fs20\insrsid8351944 wsock32.lib}{\rtlch\fcs1 \af0 \ltrch\fcs0 \i\insrsid8351944  dependency to use }{
\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\i\f2\fs20\insrsid8351944 ws2_32.lib}{\rtlch\fcs1 \af0 \ltrch\fcs0 \i\insrsid8351944  instead.
\par 33. Click "}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\i\insrsid8351944 Apply}{\rtlch\fcs1 \af0 \ltrch\fcs0 \i\insrsid8351944 " at the bottom of the dialog.
\par 34. Select }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\i\insrsid8351944 Build Solution}{\rtlch\fcs1 \af0 \ltrch\fcs0 \i\insrsid8351944  from the }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\i\insrsid8351944 Build}{\rtlch\fcs1 \af0 \ltrch\fcs0 \i\insrsid8351944 
 menu. Note: According to the INSTALL doc when building an application such as Adapt It that uses the }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\i\insrsid8351944 static}{\rtlch\fcs1 \af0 \ltrch\fcs0 \i\insrsid8351944  libcurl library, we must add the }{
\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\i\f2\fs20\insrsid8351944 CURL_STATICLIB}{\rtlch\fcs1 \af0 \ltrch\fcs0 \i\insrsid8351944  symbol to Preprocessor Defines in Visual Studio so that\line \line }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 
\b\i\f2\fs20\insrsid8351944 /D CURL_STATICLIB\line \line }{\rtlch\fcs1 \af0 \ltrch\fcs0 \i\insrsid8351944 is included in the command line arguments that get invoked by the IDE. }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\i\insrsid8351944 
I have already added this define in the Visual Studio 2008 project, so when you get the project file from svn it should be included in the Preprocessor Defines}{\rtlch\fcs1 \af0 \ltrch\fcs0 \i\insrsid8351944 
. Without this define the linker will look for dynamic import symbols instead of the static ones.
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
\par }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 NOTE: Step 35 has already been done and the Certificate of
 Authority file (curl-ca-bundle.crt) created in this step is now located in the docs folder of the repository, and gets included in the Adapt It installers. Step 35 is provided here in case you would ever need to recreate the file.
\par {\listtext\pard\plain\ltrpar \rtlch\fcs1 \af0 \ltrch\fcs0 \lang1033\langfe1025\langfenp1025\insrsid8351944 \hich\af0\dbch\af0\loch\f0 35.\tab}}\pard \ltrpar\ql \fi-432\li432\ri0\widctlpar
\jclisttab\tx720\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\ls3\adjustright\rin0\lin432\itap0 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 The last thing that 
is required for the libcurl library to incorporate SSL operations is to create a file containing certificates of authority (CA). This file is called }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid8351944 ca-bundle.crt}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid8351944  and is in a format the curl knows about (called a PEM format). This }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid8351944 ca-bundle.crt}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944  file can be
 created by invoking a perl script which is located in the }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid8351944 c:\\curl-7.21.1\\lib}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
 folder from the command line. Note: The script downloads a current list of authorities from the Mozilla project over the Internet. \line }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 a.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
 Open a command prompt (}{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 Start > Run > cmd}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 ).\line }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 b.}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
 Change to the c:\\curl-7.21.4\\lib directory (}{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid8351944 cd c:\\curl-7.21.4\\lib}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 )\line }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 c.}{\rtlch\fcs1 
\af0 \ltrch\fcs0 \insrsid8351944  invoke the perl command by typing: }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid8351944 mk-ca-bundle.pl}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 \line You should see the following output lines:}{
\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \f2\fs20\insrsid8351944 \line }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid8351944    Downloading \lquote certdata.txt\rquote  \'85\line    Processing \lquote certdata.txt\rquote  \'85\line 
   Done (140 CA certs processed)\line }{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 When finished, you should see a new file in the directory called }{\rtlch\fcs1 \af2\afs20 \ltrch\fcs0 \b\f2\fs20\insrsid8351944 ca-bundle.crt}{\rtlch\fcs1 \af0 
\ltrch\fcs0 \insrsid8351944 . This file now contains a long list of authorities and their certificate keys. For Adapt It, we really only need to have the particular certificate(s) of authority for }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 St
artCom Ltd}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 , which issues the SSL Certificate of Authority for }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 adapt-it.org}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 . So, I\rquote 
ve created a separate file called }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 curl-ca-bundle.crt}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
 which contains the certificates that Adapt It needs. This file is now part of our repository and resides in the repository\rquote s }{\rtlch\fcs1 \af0 \ltrch\fcs0 \b\insrsid8351944 docs}{\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
 folder. It is copied from there and included in our installers and packagers which place it in the correct location (at the path stored in }{\rtlch\fcs1 \af2\afs16 \ltrch\fcs0 \f2\fs16\lang1024\langfe1025\langnp1024\insrsid8351944 m_setupFolder}{
\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 ) so that the Adapt It executables can find it.
\par }\pard \ltrpar\ql \li0\ri0\widctlpar\wrapdefault\hyphpar0\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 {\rtlch\fcs1 \af0 \ltrch\fcs0 \insrsid8351944 
\par If everything is done correctly, the Adapt It project on Windows should now build with the libcurl and OpenSSL support needed for the CEmailReportDlg class.
\par }}