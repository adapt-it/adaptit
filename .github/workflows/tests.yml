name: Test Build Deb (Ubuntu/Debian) packages

on:
  push:
    branches:
      - 'master'
  workflow_dispatch:
    inputs:
      releases:
        description: 'Space separate list of Debian/Ubuntu releases'
        required: true
        default: 'all'

env:
    DEBFULLNAME: Bill Martin
    DEBEMAIL: bill_martin@sil.org

jobs:
  get-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.get-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
        with: {path: adaptit}
      - id: get-matrix
        run: cd adaptit && ./scripts/get-ci-matrix.py ${{ github.event.inputs.releases }}

  build-dpkg:
    needs: get-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.get-matrix.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v2
        with: {path: adaptit}

      - name: build-docker-build-dpkg
        run: docker build --build-arg FROM=${{ matrix.distro }}:${{ matrix.release }} -t build-dpkg:${{ matrix.release }} adaptit/build-dpkg

      - name: autogen.sh
        run: |
          echo "Running autogen.sh in bin/linux"
          docker run --rm -v $(pwd):/github/workspace --workdir /github/workspace/adaptit/bin/linux build-dpkg:${{ matrix.release }} ./autogen.sh

      - name: build-dkpg
        run: |
          echo "Doing package build"
          docker run --rm -v $(pwd):/github/workspace --workdir /github/workspace/adaptit -e LOCAL=${{ matrix.release }} -e DEBFULLNAME -e DEBEMAIL build-dpkg:${{ matrix.release }} /build.sh -I.git -Iwin32_utils ${{ matrix.args }}

      - name: ${{ matrix.distro }}
        uses: actions/upload-artifact@v4
        with:
          path: |
            adaptit/artifacts/*.dsc
            adaptit/artifacts/*.deb
            adaptit/artifacts/*.changes
            adaptit/artifacts/*.buildinfo
            adaptit/artifacts/*.ddeb
