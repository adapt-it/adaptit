{\rtf1 \mac \ansicpg10000 \nisusversion40007 \deff0 {\fonttbl {\f0 \froman \fcharset77 Liberation Serif{\*\falt Times New Roman};}{\f1 \fswiss \fcharset77 Arial-BoldMT{\*\falt Arial};}{\f2 \froman \fcharset77 TimesNewRomanPSMT{\*\falt Times New Roman};}{\f3 \fnil \fcharset77 Liberation Sans{\*\falt Arial};}{\f4 \froman \fcharset77 TimesNewRomanPS-BoldMT{\*\falt Times New Roman};}{\f5 \froman \fcharset77 Arial-BoldItalicMT{\*\falt Arial};}{\f6 \froman \fcharset77 CourierNewPS-BoldMT{\*\falt Courier New};}{\f7 \fmodern \fcharset77 CourierNewPSMT{\*\falt Courier New};}{\f8 \fnil \fcharset77 Courier-Bold{\*\falt Courier};}{\f9 \froman \fcharset77 TimesNewRomanPS-ItalicMT{\*\falt Times New Roman};}{\f10 \fswiss \fcharset77 Arial-ItalicMT{\*\falt Arial};}{\f11 \froman \fcharset77 Courier New;}}{\colortbl ;\red0 \green0 \blue128 ;\red0 \green0 \blue255 ;}{\*\revtbl {Unknown;}{Mike Hore;}}\nisusrevtypes0 \donotshowinsdel1 {\*\nisustoctable {\nisustoc \tcf68 {\nisustocname Default TOC}{\*\nisustoctabrep  }{\*\nisustocretrep  }{\nisustoclevelstyle TOC 1}{\nisustoclevelstyle TOC 2}{\nisustoclevelstyle TOC 3}{\nisustoclevelstyle TOC 4}{\nisustoclevelstyle TOC 5}{\nisustoclevelstyle TOC 6}{\nisustoclevelstyle TOC 7}{\nisustoclevelstyle TOC 8}{\nisustoclevelstyle TOC 9}}\nisusactivetoc68
}{\*\nisusxetable {\nisusxe \xef68 {\nisusxename Default Index}{\nisusxeheaderstyle Index Heading}{\nisusxelevelstyle Index 1}{\nisusxelevelstyle Index 2}{\nisusxelevelstyle Index 3}{\nisusxelevelstyle Index 4}{\nisusxelevelstyle Index 5}{\nisusxelevelstyle Index 6}{\nisusxelevelstyle Index 7}{\nisusxelevelstyle Index 8}{\nisusxelevelstyle Index 9}{\*\fldinst INDEX \\k ". " \\g \endash  \\e "\tab " \\l ", " \\f D}}\nisusactivexe68
}{\stylesheet {\s965 \snext965 \f0\fs24\lang1033 \ql\nowidctlpar\keep\keepn\sb0\sa0\sl240\slmult1\ltrpar\hyphpar1\li0\lin0\fi0\ri0\rin0 Normal;}{\s966 \snext967 \sbasedon968 \f3\fs24\lang1033 \ql\nowidctlpar\keep\keepn\sb240\sa120\sl240\slmult1\ltrpar\hyphpar1\li0\lin0\fi0\ri0\rin0 \tcf68 \tcl1 Heading 1;}{\s967 \snext967 \sbasedon965 \f2\fs24\lang1033 \ql\widctlpar\keep\keepn\sb0\sa120\sl240\slmult1\ltrpar\hyphpar1\li0\lin0\fi0\ri0\rin0 Text body;}{\s968 \snext967 \sbasedon965 \f3\fs28\lang1033 \ql\nowidctlpar\keep\keepn\sb240\sa120\sl240\slmult1\ltrpar\hyphpar1\li0\lin0\fi0\ri0\rin0 Heading;}{\s969 \snext967 \sbasedon968 \f3\fs24\lang1033 \ql\nowidctlpar\keep\keepn\sb240\sa120\sl240\slmult1\ltrpar\hyphpar1\li0\lin0\fi0\ri0\rin0 \tcf68 \tcl2 Heading 2;}{\s970 \snext967 \sbasedon968 \f3\fs24\lang1033 \ql\nowidctlpar\keep\keepn\sb240\sa120\sl240\slmult1\ltrpar\hyphpar1\li0\lin0\fi0\ri0\rin0 \tcf68 \tcl3 Heading 3;}{\*\cs971 \ul\cf1 Internet Link;}{\*\cs972 Line numbering;}{\s973 \snext973 \sbasedon967 \f2\fs24\lang1033 \ql\widctlpar\keep\keepn\sb0\sa120\sl240\slmult1\ltrpar\hyphpar1\li0\lin0\fi0\ri0\rin0 List;}{\s974 \snext974 \sbasedon965 \f9\fs24\i\lang1033 \ql\nowidctlpar\keep\keepn\sb120\sa120\sl240\slmult1\ltrpar\hyphpar1\li0\lin0\fi0\ri0\rin0 Caption;}{\s975 \snext975 \sbasedon965 \f0\fs24\lang1033 \ql\nowidctlpar\keep\keepn\sb0\sa0\sl240\slmult1\ltrpar\hyphpar1\li0\lin0\fi0\ri0\rin0 Index;}{\s976 \snext977 \sbasedon968 \f1\fs32\b\lang1033 \qc\nowidctlpar\keep\keepn\sb240\sa60\sl240\slmult1\ltrpar\hyphpar1\li0\lin0\fi0\ri0\rin0 Title;}{\s977 \snext967 \sbasedon968 \f10\fs28\i\lang1033 \qc\nowidctlpar\keep\keepn\sb240\sa120\sl240\slmult1\ltrpar\hyphpar1\li0\lin0\fi0\ri0\rin0 Subtitle;}{\s978 \snext978 \f11\fs20\lang1033 \ql\widctlpar\keep\keepn\sb0\sa0\sl240\slmult1\ltrpar\hyphpar1\li0\lin0\fi0\ri0\rin0\tx916\tx1832\tx2748\tx3664\tx4580\tx5496\tx6412\tx7328\tx8244\tx9160\tx10076\tx10992\tx11908\tx12824\tx13740\tx14656 HTML Preformatted;}{\s979 \snext979 \sbasedon965 \f0\fs24\lang1033 \ql\nowidctlpar\keep\keepn\sb0\sa0\sl240\slmult1\ltrpar\hyphpar1\li0\lin0\fi0\ri0\rin0\tqc\tx4320\tqr\tx8640 Header;}{\s980 \snext980 \sbasedon965 \f0\fs24\lang1033 \ql\nowidctlpar\keep\keepn\sb0\sa0\sl240\slmult1\ltrpar\hyphpar1\li0\lin0\fi0\ri0\rin0\tqc\tx4320\tqr\tx8640 Footer;}{\*\cs981 \ul\cf2 Hyperlink;}}{\*\listtable {\list \listhybrid {\listlevel \levelnfc0 \levelnfcn0 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'00.;}{\levelnumbers \'01;}\li720
\lin720 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc4 \levelnfcn4 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'01.;}{\levelnumbers \'01;}\li1080
\lin1080 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc2 \levelnfcn2 \leveljc2 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'02.;}{\levelnumbers \'01;}\li1440
\lin1440 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc0 \levelnfcn0 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'03.;}{\levelnumbers \'01;}\li1800
\lin1800 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc4 \levelnfcn4 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'04.;}{\levelnumbers \'01;}\li2160
\lin2160 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc2 \levelnfcn2 \leveljc2 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'05.;}{\levelnumbers \'01;}\li2520
\lin2520 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc0 \levelnfcn0 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'06.;}{\levelnumbers \'01;}\li2880
\lin2880 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc4 \levelnfcn4 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'07.;}{\levelnumbers \'01;}\li3240
\lin3240 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc2 \levelnfcn2 \leveljc2 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'08.;}{\levelnumbers \'01;}\li3600
\lin3600 \fi-360 \ri0 \rin0 }{\listname ;}\listid1274629594 \nisuslistcontnum1 {\*\liststylename Number List 3;}}{\list \listhybrid {\listlevel \levelnfc0 \levelnfcn0 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'00.;}{\levelnumbers \'01;}\li720
\lin720 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc4 \levelnfcn4 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'01.;}{\levelnumbers \'01;}\li1080
\lin1080 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc2 \levelnfcn2 \leveljc2 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'02.;}{\levelnumbers \'01;}\li1440
\lin1440 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc0 \levelnfcn0 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'03.;}{\levelnumbers \'01;}\li1800
\lin1800 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc4 \levelnfcn4 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'04.;}{\levelnumbers \'01;}\li2160
\lin2160 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc2 \levelnfcn2 \leveljc2 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'05.;}{\levelnumbers \'01;}\li2520
\lin2520 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc0 \levelnfcn0 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'06.;}{\levelnumbers \'01;}\li2880
\lin2880 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc4 \levelnfcn4 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'07.;}{\levelnumbers \'01;}\li3240
\lin3240 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc2 \levelnfcn2 \leveljc2 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'08.;}{\levelnumbers \'01;}\li3600
\lin3600 \fi-360 \ri0 \rin0 }{\listname ;}\listid38535563 \nisuslistcontnum1 {\*\liststylename Number List 2;}}{\list \listhybrid {\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01?;}{\levelnumbers ;}\li720
\lin720 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01o;}{\levelnumbers ;}\li1080
\lin1080 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01?;}{\levelnumbers ;}\li1440
\lin1440 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01?;}{\levelnumbers ;}\li1800
\lin1800 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01o;}{\levelnumbers ;}\li2160
\lin2160 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01?;}{\levelnumbers ;}\li2520
\lin2520 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01?;}{\levelnumbers ;}\li2880
\lin2880 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01o;}{\levelnumbers ;}\li3240
\lin3240 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01?;}{\levelnumbers ;}\li3600
\lin3600 \fi-360 \ri0 \rin0 }{\listname ;}\listid1333685350 \nisuslistcontnum1 {\*\liststylename Bullet List 4;}}{\list \listhybrid {\listlevel \levelnfc0 \levelnfcn0 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'00.;}{\levelnumbers \'01;}\li720
\lin720 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc4 \levelnfcn4 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'01.;}{\levelnumbers \'01;}\li1080
\lin1080 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc2 \levelnfcn2 \leveljc2 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'02.;}{\levelnumbers \'01;}\li1440
\lin1440 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc0 \levelnfcn0 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'03.;}{\levelnumbers \'01;}\li1800
\lin1800 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc4 \levelnfcn4 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'04.;}{\levelnumbers \'01;}\li2160
\lin2160 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc2 \levelnfcn2 \leveljc2 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'05.;}{\levelnumbers \'01;}\li2520
\lin2520 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc0 \levelnfcn0 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'06.;}{\levelnumbers \'01;}\li2880
\lin2880 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc4 \levelnfcn4 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'07.;}{\levelnumbers \'01;}\li3240
\lin3240 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc2 \levelnfcn2 \leveljc2 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'08.;}{\levelnumbers \'01;}\li3600
\lin3600 \fi-360 \ri0 \rin0 }{\listname ;}\listid1550207533 \nisuslistcontnum1 {\*\liststylename Number List 4;}}{\list \listhybrid {\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01?;}{\levelnumbers ;}\li720
\lin720 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01o;}{\levelnumbers ;}\li1080
\lin1080 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01?;}{\levelnumbers ;}\li1440
\lin1440 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01?;}{\levelnumbers ;}\li1800
\lin1800 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01o;}{\levelnumbers ;}\li2160
\lin2160 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01?;}{\levelnumbers ;}\li2520
\lin2520 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01?;}{\levelnumbers ;}\li2880
\lin2880 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01o;}{\levelnumbers ;}\li3240
\lin3240 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01?;}{\levelnumbers ;}\li3600
\lin3600 \fi-360 \ri0 \rin0 }{\listname ;}\listid1039769627 \nisuslistcontnum1 {\*\liststylename Bullet List 3;}}{\list \listhybrid {\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01\u8226 ?;}{\levelnumbers ;}\li720
\lin720 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01\u9702 ?;}{\levelnumbers ;}\li1080
\lin1080 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01\u9642 ?;}{\levelnumbers ;}\li1440
\lin1440 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01\u8226 ?;}{\levelnumbers ;}\li1800
\lin1800 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01\u9702 ?;}{\levelnumbers ;}\li2160
\lin2160 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01\u9642 ?;}{\levelnumbers ;}\li2520
\lin2520 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01\u8226 ?;}{\levelnumbers ;}\li2880
\lin2880 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01\u9702 ?;}{\levelnumbers ;}\li3240
\lin3240 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01\u9642 ?;}{\levelnumbers ;}\li3600
\lin3600 \fi-360 \ri0 \rin0 }{\listname ;}\listid2038299453 \nisuslistcontnum1 {\*\liststylename Bullet List 2;}}{\list \listhybrid {\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01\u8226 ?;}{\levelnumbers ;}\li720
\lin720 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01\u9702 ?;}{\levelnumbers ;}\li1080
\lin1080 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01\u9642 ?;}{\levelnumbers ;}\li1440
\lin1440 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01\u8226 ?;}{\levelnumbers ;}\li1800
\lin1800 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01\u9702 ?;}{\levelnumbers ;}\li2160
\lin2160 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01\u9642 ?;}{\levelnumbers ;}\li2520
\lin2520 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01\u8226 ?;}{\levelnumbers ;}\li2880
\lin2880 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01\u9702 ?;}{\levelnumbers ;}\li3240
\lin3240 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc23 \levelnfcn23 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'01\u9642 ?;}{\levelnumbers ;}\li3600
\lin3600 \fi-360 \ri0 \rin0 }{\listname ;}\listid268317158 \nisuslistcontnum1 {\*\liststylename Bullet List 1;}}{\list \listhybrid {\listlevel \levelnfc0 \levelnfcn0 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'00.;}{\levelnumbers \'01;}\li720
\lin720 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc4 \levelnfcn4 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'01.;}{\levelnumbers \'01;}\li1080
\lin1080 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc2 \levelnfcn2 \leveljc2 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'02.;}{\levelnumbers \'01;}\li1440
\lin1440 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc0 \levelnfcn0 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'03.;}{\levelnumbers \'01;}\li1800
\lin1800 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc4 \levelnfcn4 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'04.;}{\levelnumbers \'01;}\li2160
\lin2160 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc2 \levelnfcn2 \leveljc2 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'05.;}{\levelnumbers \'01;}\li2520
\lin2520 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc0 \levelnfcn0 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'06.;}{\levelnumbers \'01;}\li2880
\lin2880 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc4 \levelnfcn4 \leveljc0 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'07.;}{\levelnumbers \'01;}\li3240
\lin3240 \fi-360 \ri0 \rin0 }{\listlevel \levelnfc2 \levelnfcn2 \leveljc2 \levelfollow0 \levelstartat1 \nisuslevelnuminc1 \levelspace0 \levelindent0 {\leveltext \'02\'08.;}{\levelnumbers \'01;}\li3600
\lin3600 \fi-360 \ri0 \rin0 }{\listname ;}\listid1962853711 \nisuslistcontnum1 {\*\liststylename Number List 1;}}}{\*\listoverridetable {\listoverride \listid268317158 \listoverridecount1 {\lfolevel \listoverridestartat \levelstartat1 \nisuslistsoftoverridestartat }\ls1
}{\listoverride \listid2038299453 \listoverridecount1 {\lfolevel \listoverridestartat \levelstartat1 \nisuslistsoftoverridestartat }\ls2 }{\listoverride \listid1039769627 \listoverridecount1 {\lfolevel \listoverridestartat \levelstartat1 \nisuslistsoftoverridestartat }\ls3
}{\listoverride \listid1333685350 \listoverridecount1 {\lfolevel \listoverridestartat \levelstartat1 \nisuslistsoftoverridestartat }\ls4 }{\listoverride \listid2038299453 \listoverridecount0 \ls5 }{\listoverride \listid1962853711 \listoverridecount1 {\lfolevel \listoverridestartat \levelstartat1 \nisuslistsoftoverridestartat }\ls6
}{\listoverride \listid38535563 \listoverridecount1 {\lfolevel \listoverridestartat \levelstartat1 \nisuslistsoftoverridestartat }\ls7 }{\listoverride \listid38535563 \listoverridecount0 \ls8 }{\listoverride \listid1274629594 \listoverridecount1 {\lfolevel \listoverridestartat \levelstartat1 \nisuslistsoftoverridestartat }\ls9
}{\listoverride \listid1550207533 \listoverridecount1 {\lfolevel \listoverridestartat \levelstartat1 \nisuslistsoftoverridestartat }\ls10 }{\listoverride \listid1550207533 \listoverridecount0 \ls11 }{\listoverride \listid1274629594 \listoverridecount0 \ls12 }{\listoverride \listid1333685350 \listoverridecount0 \ls13 }{\listoverride \listid1039769627 \listoverridecount0 \ls14 }{\listoverride \listid268317158 \listoverridecount0 \ls15 }{\listoverride \listid1962853711 \listoverridecount0 \ls16 }}\defformat {\info {\*\nisusgmtoffset +11:00}{\author Erik Brommers}{\creatim \yr2012 \mo11 \dy18 \hr13 \min58 }{\revtim \yr2014 \mo1 \dy15 \hr10 \min12 }{\printim \yr2013 \mo12 \dy19 \hr9 \min42 }}{\*\userprops }\viewkind4
\viewscale125 \nisusviewruler1 \nisusviewrulerh1 \nisusviewrulerv0 \nisusviewtoolbar1 \nisusviewtooldrawer1 \nisusviewpagenumtype1 \nisusviewrulericons0 {\*\nisusviewsettings \viewkind4 \viewscale125 {\nisusnavsettings {\*\closedtochandles }{\*\mode toc}}{\nisuscommentsettings {\*\showPane 1}{\*\showTextHighlighting 1}}{\nisusrevisionsettings {\*\showPane 1}{\*\showTextHighlighting 1}}}{\*\nisusviewsettings \viewkind1 \viewscale100 {\nisusnavsettings {\*\mode toc}{\*\closedtochandles }{\*\visible 0}}{\nisuscommentsettings {\*\showPane 1}{\*\showTextHighlighting 1}}{\nisusrevisionsettings {\*\showPane 1}{\*\showTextHighlighting 1}}}{\*\nisuswindow \x329 \y111 \w1163 \h858 }\nisusrulerunits1
\nshwinv0 \nshwpg1 \nisusinlinespell1 \hyphauto0 \hyphhotz9360 \nisusselectstart30927 \nisusselectlength4 \fet2 \ftnbj \paperw12240 \paperh15840 \margl1440 \margr1440 \margt1440 \margb1497 \gutter0 \pgnstart1 \nocolbal \f0 \sectd \endnhere \linemod5 \linex283 \lineppage \linestarts1 \sxnlinedec {\*\nisuslinenumfmt x}\cols1 \ltrsect \colbalsxn0 \pgwsxn12240 \pghsxn15840 \marglsxn1440 \margrsxn1440 \margtsxn1440
\margbsxn1497 \guttersxn0 \headery720 \footery1097 \pgncont \pgndec \sxnstarts1 \sxnrestart \sxndec {\header \plain \pard \s979 \keep\keepn\ltrpar\tqc\tx4320\tqr\tx8640 \f0\fs24\lang1033 }{\footer \plain {\pard \s980 \keep\keepn\ltrpar\tqc\tx4320\tqr\tx8640 {\f1\fs18\b\lang1033 Setting up wxWidgets and Adapt It on Ubuntu Linux}{\f2\lang1033 \tab {\f1\fs18\b Page }\f0
{\field {\*\fldinst PAGE}{\fldrslt 0}}{\f1\fs18\b  of }{\field {\*\fldinst NUMPAGES}{\fldrslt 0}}\par }}}\deftab720 {\listtext {\*\bkmkstart _Toce16b606}{\pard \s966 \qc\keep\keepn\sb240\sa60\ltrpar\li432\lin432\fi-432\ri0\rin0\tx432\tx864\tx1728 {\f2\lang1033 \tab }{\f2\lang1033 \bullet \tab }}}{\pard \s966 \qc\keep\keepn\sb240\sa60\ls1\ilvl0\ltrpar\li432\lin432\fi-432\ri0\rin0\tx432\tx864\tx1728 {\f2\lang3081 \tab {\*\bkmkstart Bookmark}{\f1\fs32\b Setting up wxWidgets and Adapt It on Ubuntu Linux{\*\bkmkend _Toce16b606\nisustcf68 }}\f3
\lang1033 \par
}}{\listtext {\*\bkmkstart _Toc6fc94b53}{\pard \s966 \qc\keep\keepn\sb240\sa60\ltrpar\li432\lin432\fi-432\ri0\rin0\tx432\tx864\tx1728 {\f2\lang1033 \tab }{\f2\lang1033 \bullet \tab }}}{\pard \s966 \qc\keep\keepn\sb240\sa60\ls2\ilvl0\ltrpar\li432\lin432\fi-432\ri0\rin0\tx432\tx864\tx1728 {\f1\fs32\b\lang3081 \tab {\*\bkmkend Bookmark}\fs24
by Bill Martin (Updated by Mike Hore 30 April 2013){\*\bkmkend _Toc6fc94b53\nisustcf68 }}{\f3\lang1033 \par
}}{\pard \s965 \keep\keepn\sa120\ltrpar {\lang1033 \par
\f2\lang3081 Notes: \f0\lang1033 \par
}}{\listtext {\pard \s965 \keep\keepn\sa120\ltrpar\li720\lin720\fi-360\ri0\rin0\tx360\tx720\tx1080\tx1440 {\f2\lang1033 \tab }{\f2\lang1033 ?\tab }}}{\pard \s965 \keep\keepn\sa120\ls3\ilvl0\ltrpar\li720\lin720\fi-360\ri0\rin0\tx360\tx720\tx1080\tx1440 {\f2\lang3081 These instructions assume you are running a recent version of Ubuntu Linux. Setup for other Linux distributions, such as Debian Lenny, may differ in details, but should be similar. At the time of writing, the latest distribution of Ubuntu is 13.04 Raring. The Ubuntu LTS is still 12.04 Precise. The instructions also assume you have Internet access.\f0\lang1033 \par
}}{\listtext {\pard \s965 \keep\keepn\sa120\ltrpar\li720\lin720\fi-360\ri0\rin0\tx360\tx720\tx1080\tx1440 {\f2\lang1033 \tab }{\f2\lang1033 ?\tab }}}{\pard \s965 \keep\keepn\sa120\ls4\ilvl0\ltrpar\li720\lin720\fi-360\ri0\rin0\tx360\tx720\tx1080\tx1440 {\f2\lang3081 We recommend you install the {\f4\b amd64} version of Ubuntu Linux in case you need to create the Linux packages for Adapt It. The amd64 version is compatible with any 64-bit Intel machine, including Intel-based Macs, and will allow you to create both 32- and 64-bit package versions for distribution.\f0
\lang1033 \par
}}{\listtext {\*\bkmkstart _Toc50b5725b}{\pard \s969 \keep\keepn\sb240\sa120\ltrpar\li576\lin576\fi-576\ri0\rin0\tx576\tx1152\tx2304 {\f2\lang1033 \tab }{\f2\lang1033 \u9702 ?\tab }}}{\pard \s969 \keep\keepn\sb240\sa120\ls5\ilvl1\ltrpar\li576\lin576\fi-576\ri0\rin0\tx576\tx1152\tx2304 {\f2\lang3081 \tab {\*\bkmkstart Bookmark1}{\f5\fs28\b\i Repository Organization{\*\bkmkend _Toc50b5725b\nisustcf68 }}\f3
\lang1033 \par
}}{\pard \s965 \keep\keepn\ltrpar {\f2\lang3081 The Adapt It project repository is organized to keep the build environments separate for building on individual platforms. Since Adapt It is a cross-platform project that uses the same set of sources for each platform, the single set of source files are stored in a {\f4\b source} folder, and the individual platform specific setup and build products are kept in separate sub-folders of a {\f4\b bin} folder. The project is organized within the following directory structure:\f0
\lang1033 \par
\lang3081 \par
{\f6\fs20\b\lang1033 adaptit}\f7\fs20\lang1033        \f2\fs24 [the top or trunk folder for the project]\f0 \par
\f7\fs20    {\f6\b |__ bin}\f0\fs24 \par
{\f6\fs20\b    |     |}\par
{\f6\fs20\b    |     |__ linux}\par
{\f6\fs20\b    |     |}\par
{\f6\fs20\b    |     |__ mac}\par
{\f6\fs20\b    |     |}\par
{\f6\fs20\b    |     |__ win32}\par
{\f6\fs20\b    |}\par
{\f6\fs20\b    |__ source}\f7
\fs20     \f2\fs24 [contains all .cpp and .h source files]\f0 \par
\f7\fs20    \f0\fs24 \par
\lang3081 \par
\f2\lang1033 Note: There are other folders in the repository that are part of a full checkout of the project, but they are not shown in the above directory tree for purposes of illustration.\f0 \par
\lang3081 \par
\f2\lang1033 The {\f6\fs20\b adaptit/bin/linux} folder is where the project builds are performed for the Linux port. All of the configuration and Makefile related files are also located there, as well as CodeBlocks IDE project file for adaptit (called {\f4\b adaptit.cbp)}. \f0
\par
\lang3081 \par
{\sa120 \f2\lang1033 The default Ubuntu distribution does not come with all the software packages that are needed to actually develop software from sources pre-installed. This documentation describes how to install the software packages you will need by invoking {\f4\b apt-get }quickly install everything in a single command from the command line (see the next section). The needed software packages, of course, could be installed individually using other software package managing tools such as the Ubuntu Software Center (in Unity) or Synaptic Package Manager (which is no longer installed by default in Ubuntu 12.04 and later distros). We will utilize {\f6\fs20\b sudo} and {\f6\fs20\b apt-get} at the {\f4\b command-line} to speed up the process.\f0
\par
}}}{\listtext {\*\bkmkstart _Toc11b23297}{\pard \s969 \keep\keepn\sb240\sa60\ltrpar\li576\lin576\fi-576\ri0\rin0\tx576\tx1152\tx2304 {\f2\lang1033 \tab }{\f2\lang1033 \u9702 ?\tab }}}{\pard \s969 \keep\keepn\sb240\sa60\ls5\ilvl1\ltrpar\li576\lin576\fi-576\ri0\rin0\tx576\tx1152\tx2304 {\f2\lang1033 \tab {\*\bkmkend Bookmark1}{\f5\fs28\b\i Fast Setup using apt-get command line{\*\bkmkend _Toc11b23297\nisustcf68 }}\f3
\par
}}{\pard \s967 \widctlpar\keep\keepn\sa120\ltrpar {\f2\lang1033 Using a single {\f6\fs20\b sudo apt-get} call you can easily and quickly install all the packages needed to setup wxWidgets and Adapt It directly from the command line. If you are viewing this document on your developer machine, you can easily copy and paste the following commands and execute them (in one go) in a terminal:\par
{\f6\fs20\b sudo apt-get install codeblocks gnome-common libgtk2.0-0-dbg libgtk2.0-dev gcc-multilib uuid-dev libgnomeprintui2.2-dev curl libcurl4-gnutls-dev libwxbase2.8-0 libwxbase2.8-dbg libwxbase2.8-dev libwxgtk2.8-0 libwxgtk2.8-dbg libwxgtk2.8-dev wx-common wx2.8-headers wx2.8-i18n subversion}\par
Respond {\f4\b yes} or {\f4\b y} to the prompt telling you how much will be installed. Apt-get will download and install about 115 MB of additional packages (taking about 367 MB of additional disk space). Note: In addition to installing the Linux development command line tools and the {\f4\b \endash dbg} and {\f4\b \endash dev} libraries needed to build Adapt It, the above {\f6\fs20\b apt-get install} command also installs the Linux {\f4\b subversion} client and the {\f4\b CodeBlocks} IDE for Linux. \par
}}{\listtext {\*\bkmkstart _Toc6edbdb50}{\pard \s969 \keep\keepn\sb240\sa60\ltrpar\li576\lin576\fi-576\ri0\rin0\tx576\tx1152\tx2304 {\f2\lang1033 \tab }{\f2\lang1033 \u9702 ?\tab }}}{\pard \s969 \keep\keepn\sb240\sa60\ls5\ilvl1\ltrpar\li576\lin576\fi-576\ri0\rin0\tx576\tx1152\tx2304 {\f2\lang1033 \tab {\*\bkmkstart Bookmark2}{\f5\fs28\b\i The packages.sil.org/ubuntu repository{\*\bkmkend _Toc6edbdb50\nisustcf68 }}\f3
\par
}}{\pard \s967 \widctlpar\keep\keepn\sa120\ltrpar {\f2\lang1033 SIL has a repository for Ubuntu Linux software packages of particular interest to those involved in language and translation programs. This repository is the one where the Adapt It team releases Adapt It versions for Linux. Version 6 and newer versions of Adapt It require certain libraries that are available only since Lucid. Therefore Version 6 of Adapt It is being made available only for the following Ubuntu distributions: Lucid (i386 and amd64), Oneiric (i386 and amd64), Precise (i386 and amd64), Quantal (i386 and amd64, and Raring (i386 and amd64). The Maverick (i386 and amd64) and Natty (i386 and amd64) distributions have \ldblquote expired\rdblquote  and are no longer supported with updates by Canonical.\par
In order to obtain Adapt It and other software from the packages.sil.org repository, you need to (1) download the SIL Repository public key file, (2) Access your Software Sources dialog (3), Import the SIL repository key into your software sources and (4) add the SIL repository to your software sources. These steps are detailed below:\par
(1) Download the SIL Repository public key. The key is available over the Internet. Run your browser and go to the http://packages.sil.org web page. As instructed there, right click on the link labeled {\ul this link} and select \ldblquote
Save Link As...\rdblquote . In the file dialog navigate to the folder where you want to save the {\f4\b sil.gpg} key file. The Downloads folder is fine. Click Save. You can close or minimize your browser.\par
(2) Access your Software Sources dialog. To use the SIL repository you have to set up your computer's Software Sources. Finding the Software Sources depends on what version of Linux you are using. If using the Unity interface you can access the {\f4\b Software Sources }applet by clicking on Dash Home and typing \ldblquote
software sources\rdblquote  in the search bar (or running the Ubuntu Software Center and selecting Software Sources... from its Edit{\f4\b  }menu). Alternately, if the Synaptic Package Manager is installed, you can run it and select {\f4\b Settings}->{\f4\b Repositories}. In any case, your {\f4\b Software Sources} dialog should be in view.\par
(3) First, click on the Software Sources' {\f4\b Authentication} tab. Click the {\f4\b Import Key File...} button, and navigate to the {\f4\b sil.gpg} key file you saved in (1) above, select it and click OK. Leave the Software Sources dialog open for the next step below.\par
(4) Next, click on the Software Sources' {\f4\b Other Software} tab. Click the {\f4\b Add...} button, and enter the following in the APT line:\par
\tab
{\f6\fs20\b deb http://packages.sil.org/ubuntu precise main}\par
If you have a Linux computer that is running a different version of Ubuntu, just substitute instead the distribution name that you are actually running: {\f4\b raring, quantal, oneiric, (natty, maverick,) }or {\f4\b lucid}.\par
If using Unity it may take a minute or two for it to recognize the change and read the new repositories. If using the Synaptic Package Manager click {\f4\b Reload} to get the package manager to read the new repositories. You should now be able to find the adaptit application. In Unity's Ubuntu Software Center search for {\f4\b adaptit}. (In the Synaptic Package manager, click on the Search button and search for {\f4\b adaptit}.) You should see two packages for Adapt It: {\f4\b adaptit} and {\f4\b adaptit-docs} (you may need to click on the \ldblquote
show 1 technical item\rdblquote  link in the Ubuntu Software Center to see the adaptit-docs package). Go ahead and install both Adapt It packages. Once installed Adapt It will be available in the Unity interface by clicking on the Dash Home button and start typing {\f4\b adaptit} in the search field and select the Adapt It icon when it appears. Adapt It will be a menu item under {\f4\b Applications > Office} in the older classic Gnome/Ubuntu interface.\par
Now, you can close the Software Sources (or Synaptic Package Manager). \par
}}{\listtext {\*\bkmkstart _Toc68883436}{\pard \s969 \keep\keepn\sb240\sa60\ltrpar\li576\lin576\fi-576\ri0\rin0\tx576\tx1152\tx2304 {\f2\lang1033 \tab }{\f2\lang1033 \u9702 ?\tab }}}{\pard \s969 \keep\keepn\sb240\sa60\ls5\ilvl1\ltrpar\li576\lin576\fi-576\ri0\rin0\tx576\tx1152\tx2304 {\f2\lang1033 \tab {\*\bkmkend Bookmark2}{\f5\fs28\b\i Notes about the wxWidgets library{\*\bkmkend _Toc68883436\nisustcf68 }}\f3
\par
}}{\pard \s965 \keep\keepn\ltrpar {\f2\lang1033 The current \ldblquote Stable Major Release\rdblquote  of the wxWidgets library at }}{\field {\*\fldinst HYPERLINK "http://www.wxwidgets.org"}{\fldrslt {\pard \s965 \keep\keepn\ltrpar {\cs981 \f2\ul\cf1\lang1033 www.wxwidgets.org}}}}{\pard \s965 \keep\keepn\ltrpar {\lang1033  as of January 2014 is 3.0.0. The wxWidgets repository is currently developing version 3.0.x. The Adapt It code base is currently compatible with any of the 2.8.12, 2.9.5 or 3.0.0 wxWidgets library. For the Windows port of Adapt It we are currently building Adapt It releases against the 2.8.12 wxWidgets library, and test builds against the 2.9.x library (testing for possible bugs in the newer library). On Linux we normally build against whatever dynamic library version of wxWidgets that comes as part of the Linux distribution. For the Linux distributions we support this is either the 2.8.10 or the 2.8.12 version of the wxWidgets library, depending on which Ubuntu distribution is running on the computer that Adapt It is run from. Note: Since Adapt It will automatically build against the dynamic wxWidgets library that comes with your Linux distribution, it is {\f4\b not}\f2
 necessary to build the wxWidgets library on your Linux development system in order to build Adapt It. See the Appendix of this document if you want to build the latest version of wxWidgets and build Adapt It for Linux against that version \endash  something you might do if you want to check out a new feature of wxWidgets that is only available in the latest version, or if you\rquote re chasing an obscure bug that may require you to debug right into the wxWidgets code.\f0 \par
\par
\f2 You can determine which version of the wxWidgets library is available as a dynamic library in the distribution of Ubuntu you are running by typing the following command in a terminal window:\f0 \par
\par
{\f6\fs20\b wx-config --version}\par
\par
\f2
The {\f6\fs20\b wx-config} command will return something like {\f6\fs20\b 2.8.12} in the terminal window. Again, please note that, if for some reason you wish to build Adapt It for Linux against a later version of the wxWidgets library (or a local build of the version 2.8.12 library), it is possible (but entirely optional) to do so. See the Appendix in this document for more information on how to set up a newer or non-distribution build of the wxWidgets library and build Adapt It against that different library.\f0
\par
\par
{\sa120 \f2 Now we can focus on getting the {\f4\b adaptit} project sources from GoogleCode checked out, and compiling them successfully at the command line, and also within the Linux version of the CodeBlocks IDE.\f0
\par
}}}{\listtext {\*\bkmkstart _Toc6d9445a8}{\pard \s969 \keep\keepn\sb240\sa60\ltrpar\li576\lin576\fi-576\ri0\rin0\tx576\tx1152\tx2304 {\f2\lang1033 \tab }{\f2\lang1033 \u9702 ?\tab }}}{\pard \s969 \keep\keepn\sb240\sa60\ls5\ilvl1\ltrpar\li576\lin576\fi-576\ri0\rin0\tx576\tx1152\tx2304 {\f2\lang1033 \tab {\*\bkmkstart Bookmark3}{\f5\fs28\b\i Checking out the adaptit project from GoogleCode{\*\bkmkend _Toc6d9445a8\nisustcf68 }}\f3
\par
}}{\pard \s965 \keep\keepn\sa120\ltrpar {\f2\lang1033 Start a Terminal session and type the following at the command line:\f0 \par
{\f4\b \tab \f6\fs20 svn --version}\par
\f2 If your system reports that "the program 'svn' is not currently installed", you should go back to the {\f4\b Fast Setup using apt-get command line} section of this document above, and ensure that you have installed {\f4\b all} of the Linux packages that are listed there, which include the {\f4\b subversion} client (svn).\f0
\par
\f2 Note: If you have ever modified your subversion {\f6\fs20\b config} file to enable its [auto-props] section, you should delete your current subversion {\f6\fs20\b config} file (located in the hidden {\f6\fs20\b .subversion} directory in your home directory). Your subversion client will then automatically create a new default config file with the settings appropriate for your system to use subversion and contribute to the Adapt It project. Each source file in the adaptit repository is set to provide files with the end-of-line (eol) for the system that checks out or updates from the external repository at Google Code.\f0
\par
\f2 Now, cd into your home folder: \f0 \par
{\f6\fs20\b \tab cd}\par
\f2 Then, from within your home folder, you can check out the {\f4\b adaptit} project from its open source repository by typing this command:\f0
\par
{\f6\fs16\b svn checkout https://adaptit.googlecode.com/svn/trunk adaptit --username user@gmail.com}\par
\f2 where the {\f4\b user} part of {\f6\fs20\b user@gmail.com} is your gmail user name. This assumes you have communicated with the Adapt It team and have received permission from them to checkout the Adapt It project with commit privileges. Note: The first time you try to commit any changes to the adaptit repository, you will be asked for your special password that you can generate if you first sign in at the GoogleCode Adapt It site with your gmail account authentication (at: }}{\field {\*\fldinst HYPERLINK "http://code.google.com/p/adaptit"}{\fldrslt {\pard \s965 \keep\keepn\sa120\ltrpar {\cs981 \f2\ul\cf1\lang1033 http://code.google.com/p/adaptit}}}}{\pard \s965 \keep\keepn\sa120\ltrpar {\lang1033 ), and then go to the Source tab of the project\rquote s website and (while logged on) click on the {\f4\b\ul googlecode.com password}\f2
 link. That password is the one you will be required to enter the first time you try to commit any changes to the Adapt It project (the password is unique to you and you will only have to enter it once on a give machine).\f0 \par
\f2 If you do not have commit privileges, you can still checkout the Adapt It source tree {\f4\b anonymously} since it is an open source project, by invoking the following svn command:\f0
\par
{\f6\fs16\b svn checkout http://adaptit.googlecode.com/svn/trunk adaptit}\par
\f2 Note that anonymous checkouts would allow you to work with the entire repository as your local working copy and allow you to do svn updates, but you won\rquote
t be able to commit any changes from your anonymous checkout of the repository. Whichever way you checkout the adaptit project, the entire project should now download and be placed within a folder called {\f4\b adaptit }which contains at least 18 other subdirectories. Currently a fresh checkout of the adaptit project amounts to about 33 MB of data.\f0
\par
\f2 To get permission to contribute to Adapt It code development, you need to get a gmail.com email account with Google, and become a member of the adaptit project. Then contact one of the developers (}}{\field {\*\fldinst HYPERLINK "mailto:bill_martin@sil.org"}{\fldrslt {\pard \s965 \keep\keepn\sa120\ltrpar {\cs981 \f2\ul\cf1\lang1033 bill_martin@sil.org}}}}{\pard \s965 \keep\keepn\sa120\ltrpar {\lang1033  or }}{\field {\*\fldinst HYPERLINK "mailto:bruce_waters@sil.org"}{\fldrslt {\pard \s965 \keep\keepn\sa120\ltrpar {\cs981 \f2\ul\cf1\lang1033 bruce_waters@sil.org}}}}{\pard \s965 \keep\keepn\sa120\ltrpar {\lang1033 ) and tell them what your gmail email address is, and ask them to give you account commit privileges.\par
\f2 At this point we should have everything set up in the project so that we can now focus on building Adapt It either from the Linux command line or from within the CodeBlocks IDE.\f0 \par
}}{\listtext {\*\bkmkstart _Toc60e9f6ab}{\pard \s969 \keep\keepn\sb240\sa60\ltrpar\li576\lin576\fi-576\ri0\rin0\tx576\tx1152\tx2304 {\f2\lang1033 \tab }{\f2\lang1033 \u9702 ?\tab }}}{\pard \s969 \keep\keepn\sb240\sa60\ls5\ilvl1\ltrpar\li576\lin576\fi-576\ri0\rin0\tx576\tx1152\tx2304 {\f2\lang1033 \tab {\*\bkmkend Bookmark3}{\f5\fs28\b\i Building and Running Adapt It from the Command Line{\*\bkmkend _Toc60e9f6ab\nisustcf68 }}\f3
\par
}}{\pard \s965 \keep\keepn\sa120\ltrpar {\f2\lang1033 With the build packages installed and the adaptit project checked out, it is now possible to build Adapt It from the command line. Here are the steps:\f0 \par
}}{\listtext {\*\bkmkstart _Toc3feb12bf}{\pard \s970 \keep\keepn\sb240\sa60\ltrpar\li720\lin720\fi-720\ri0\rin0\tx720\tx1440\tx2880 {\f2\lang1033 \tab }{\f2\lang1033 \u9642 ?\tab }}}{\pard \s970 \keep\keepn\sb240\sa60\ls5\ilvl2\ltrpar\li720\lin720\fi-720\ri0\rin0\tx720\tx1440\tx2880 {\f2\lang1033 \tab {\*\bkmkstart Bookmark4}{\f1\fs26\b Building a debug version of Adapt It{\*\bkmkend _Toc3feb12bf\nisustcf68 }}\f3
\par
}}{\pard \s965 \keep\keepn\sa120\ltrpar {\f4\b\lang1033 Initial setup steps}{\f2\lang1033  (usually not repeated):\f0 \par
}}{\listtext {\pard \s965 \keep\keepn\sa120\ltrpar\li720\lin720\fi-360\ri0\rin0\tx360\tx720\tx1080\tx1440\tx2880 {\f2\lang1033 \tab }{\f2\lang1033 1.\tab }}}{\pard \s965 \keep\keepn\sa120\ls6\ilvl0\ltrpar\li720\lin720\fi-360\ri0\rin0\tx360\tx720\tx1080\tx1440\tx2880 {\f2\lang1033 We'll keep the build products in a separate folder which I\rquote ll name {\f4\b build_debug} that we create as a child directory of {\f6\fs20\b ~/adaptit/bin/linux.}\f0
\par
}}{\listtext {\pard \s965 \keep\keepn\sa120\ltrpar\li720\lin720\fi-360\ri0\rin0\tx360\tx720\tx1080\tx1440\tx2880 {\f2\lang1033 \tab }{\f2\lang1033 1.\tab }}}{\pard \s965 \keep\keepn\sa120\ls7\ilvl0\ltrpar\li720\lin720\fi-360\ri0\rin0\tx360\tx720\tx1080\tx1440\tx2880 {\f2\lang1033 So, cd into the {\f6\fs20\b ~/adaptit/bin/linux} folder and create a {\f4\b build_debug} folder there:\line
{\f6\fs20\b cd ~/adaptit/bin/linux}\line {\f6\fs20\b mkdir build_debug}\f0 \par
}}{\listtext {\pard \s965 \keep\keepn\sa120\ltrpar\li720\lin720\fi-360\ri0\rin0\tx360\tx720\tx1080\tx1440\tx2880 {\f2\lang1033 \tab }{\f2\lang1033 2.\tab }}}{\pard \s965 \keep\keepn\sa120\ls8\ilvl0\ltrpar\li720\lin720\fi-360\ri0\rin0\tx360\tx720\tx1080\tx1440\tx2880 {\f2\lang1033 Change to the {\f4\b build_debug} directory you just created:\line
{\f6\fs20\b cd build_debug}\f0 \par
}}{\listtext {\pard \s965 \keep\keepn\sa120\ltrpar\li720\lin720\fi-360\ri0\rin0\tx360\tx720\tx1080\tx1440\tx2880 {\f2\lang1033 \tab }{\f2\lang1033 3.\tab }}}{\pard \s965 \keep\keepn\sa120\ls8\ilvl0\ltrpar\li720\lin720\fi-360\ri0\rin0\tx360\tx720\tx1080\tx1440\tx2880 {\f2\lang1033 From within the build directory, invoke configure from the parent {\f6\fs20\b linux} directory:\line
{\f6\fs20\b ../configure --prefix=/usr --enable-debug\fs18 \line }Note: The invocation of {\f6\fs20\b configure} here is done initially, but subsequently it needs to be invoked only as needed - if something changes about the configuration, or if some error during the next {\f4\b make} step indicates that configure should be called again.\f0
\par
}}{\pard \s965 \keep\keepn\sa120\ltrpar\li360\lin360\fi0\ri0\rin0\tx360\tx720 {\f4\b\lang1033 Routine steps}{\f2\lang1033  (for routine builds after the build folder exists and configure has been called):\f0 \par
}}{\listtext {\pard \s965 \keep\keepn\sa120\ltrpar\li720\lin720\fi-360\ri0\rin0\tx360\tx720\tx1080\tx1440\tx2880 {\f2\lang1033 \tab }{\f2\lang1033 4.\tab }}}{\pard \s965 \keep\keepn\sa120\ls8\ilvl0\ltrpar\li720\lin720\fi-360\ri0\rin0\tx360\tx720\tx1080\tx1440\tx2880 {\f2\lang1033 For routine builds just change to the {\f4\b build_debug} folder and invoke {\f4\b make}:\line
{\f6\fs20\b cd ~/adaptit/bin/linux/build_debug}\line {\f6\fs20\b make\line \line }The {\f4\b make} command builds the {\f6\fs20\b adaptit} executable program file, by compiling all of its source files using the g++ compiler, and linking it dynamically with the distribution\rquote
s existing wxWidgets library. If programming errors are encountered, the make process exits with an {\f4\b error message}. When that happens correct the code within the indicated source file(s) that are in error using {\f6\fs20\b gedit} or your favorite editor, save the source file, and invoke {\f6\fs20\b make} again. Repeat this process until you get a clean {\f6\fs20\b make} report (no error) and the {\f6\fs20\b adaptit} binary is created in the current {\f6\fs20\b build_debug} folder.\f0
\par
}}{\listtext {\pard \s965 \keep\keepn\sa120\ltrpar\li720\lin720\fi-360\ri0\rin0\tx360\tx720\tx1080\tx1440\tx2880 {\f2\lang1033 \tab }{\f2\lang1033 5.\tab }}}{\pard \s965 \keep\keepn\sa120\ls8\ilvl0\ltrpar\li720\lin720\fi-360\ri0\rin0\tx360\tx720\tx1080\tx1440\tx2880 {\f4\b\lang1033 Run the freshly built adaptit executable from the command line}{\f2\lang1033 . If the {\f4\b make} step (above) completes without error, the Adapt It application will be called {\f4\b adaptit} and can be run by invoking it (while you are in the {\f6\fs20\b build_debug}\f7
\fs20  \f2\fs24 folder):\line {\f6\fs20\b ./adaptit}\f0 \par
}}{\pard \s965 \keep\keepn\sa120\ltrpar {\f2\lang1033 If you get any errors when invoking the {\f6\fs20\b ../configure\fs18  \endash prefix=/usr \endash enable-debug} and {\f6\fs20\b make} commands from within the {\f4\b build_debug} directory, it might help to invoke the following command:\line
{\f6\fs20\b make clean}\line or change temporarily back to the {\f6\fs20\b ~/adaptit/bin/linux} folder and invoke:\line \tab {\f6\fs20\b ./autogen.sh}\f0 \par
\f2 and try invoking the {\f6\fs20\b ../configure} and {\f6\fs20\b make} commands again.\f0
\par
}}{\listtext {\*\bkmkstart _Toc4aaf89ca}{\pard \s970 \keep\keepn\sb240\sa60\ltrpar\li720\lin720\fi-720\ri0\rin0\tx720\tx1440\tx2880 {\f2\lang1033 \tab }{\f2\lang1033 \u9642 ?\tab }}}{\pard \s970 \keep\keepn\sb240\sa60\ls5\ilvl2\ltrpar\li720\lin720\fi-720\ri0\rin0\tx720\tx1440\tx2880 {\f2\lang1033 \tab {\*\bkmkend Bookmark4}{\f1\fs26\b Building a release (non-debug) version of Adapt It{\*\bkmkend _Toc4aaf89ca\nisustcf68 }}\f3
\par
}}{\pard \s965 \keep\keepn\sa120\ltrpar {\f2\lang1033 This is similar to the process described for building a debug version, except that we use a separate directory that we create named {\f4\b build_release} for the build products, and we call the configure script without the {\f6\fs20\b --enable-debug} option. Here are the abbreviated command line steps:\f0
\par
{\li360\lin360\fi0\ri0\rin0\tx360\tx720 {\f6\fs20\b cd ~/adaptit/bin/linux}\f2 \line {\f6\fs20\b mkdir build_release\line cd build_release\line ../configure --prefix=/usr\line make}\f0
\par
}\f2 Again the release version you just built can be executed by running:\f0 \par
{\li360\lin360\fi0\ri0\rin0\tx360\tx720 {\f6\fs20\b ./adaptit}\par
}\f2 from within the {\f6\fs20\b ~/adaptit/bin/linux/build_release} directory.\f0
\par
\f2 Note: When adaptit is run from the terminal, you will see a variety of warnings and even some CRITICAL warning messages, mostly relating to the Glib-Gobject library. For example:\f0 \par
{\li360\lin360\fi0\ri0\rin0\tx360\tx720 {\f6\fs16\b (adaptit:7071): GLib-GObject-WARNING **: instance of invalid non-instantiatable type `(null)'\line \line (adaptit:7071): GLib-GObject-CRITICAL **: g_signal_handlers_disconnect_matched: assertion `G_TYPE_CHECK_INSTANCE (instance)' failed}\par
}\f2
We have tried to track down the source of these warnings and messages, but so far without much success. They are not triggered from within Adapt It, but most likely from within the wxWidgets library which wraps the GTK library on the Linux port. The messages do not appear to affect the running or stability of Adapt It, so you can safely ignore them. Someday when we have time we may figure out how to avoid them. They do not appear when the Adapt It code is built on the Windows platform using the Visual Studio compiler.\f0 \par
\f2 See the Appendix for information if you encounter errors when invoking the configure command. In such cases you might need to recreate the configuration by "Running the autotools" as described there.\f0 \par
}}{\listtext {\*\bkmkstart _Toc34ae35b3}{\pard \s970 \keep\keepn\sb240\sa60\ltrpar\li720\lin720\fi-720\ri0\rin0\tx720\tx1440\tx2880 {\f2\lang1033 \tab }{\f2\lang1033 \u9642 ?\tab }}}{\pard \s970 \keep\keepn\sb240\sa60\ls5\ilvl2\ltrpar\li720\lin720\fi-720\ri0\rin0\tx720\tx1440\tx2880 {\f2\lang1033 \tab {\*\bkmkstart Bookmark5}{\f1\fs26\b Adding or Removing Source Files from the project \endash  in Makefile.am{\*\bkmkend _Toc34ae35b3\nisustcf68 }}\f3
\par
}}{\pard \s965 \keep\keepn\sa120\ltrpar {\f2\lang1033 The {\f6\fs20\b Makefile.am} file is where to indicate which source files are used to build the application in command line Linux builds. The Makefile.am file for the adaptit project is located at:\f0
\par
{\f6\fs20\b adaptit/bin/linux/Makefile.am}\par
}}{\pard \s965 \widctlpar\keep\keepn\ltrpar {\f2\lang1033 From time to time a developer needs to add new source files (or remove existing ones) from the adaptit project. To add or remove source files from the Linux command line build system, just do the following:\f0 \par
}}{\listtext {\pard \s965 \widctlpar\keep\keepn\ltrpar\li720\lin720\fi-360\ri0\rin0\tx360\tx720\tx1080\tx1440\tx2880 {\f2\lang1033 \tab }{\f2\lang1033 1.\tab }}}{\pard \s965 \widctlpar\keep\keepn\ls9\ilvl0\ltrpar\li720\lin720\fi-360\ri0\rin0\tx360\tx720\tx1080\tx1440\tx2880 {\f4\b\lang1033 Edit the Makefile.am file}{\f2\lang1033  \endash  you can use gedit or your favorite editor. The Makefile.am is structured so that it automatically includes all header (*.h) files via the following lines at the top of the Makefile.am file:\line \line {\f6\fs20\b # these are the headers for your project\line noinst_HEADERS = $(wildcard $(srcdir)/../../source/*.h)\line \line }Therefore, you only need to add cpp files explicitly by name. Source files are added or removed by editing the long\line
\line {\f6\fs20\b adaptit_SOURCES =} \line \line line farther down in the file. Note: Each cpp file is given with its relative path (relative to the {\f6\fs20\b adaptit/bin/linux} directory where the Makefile.am is located). Use the backslash {\f6\fs20\b \\} character to indicate soft line breaks in the long line, and to keep some semblance of alphabetical ordering to the list of sources in the long line. You can insert new sources into the list \endash
 just separate the new entries from the others by a space and ensure that each line after editing has the backslash character as the last character in each line once editing is complete. Sources can be removed from the long {\f6\fs20\b adaptit_SOURCES =} line in the same way.\f0
\par
}}{\listtext {\pard \s965 \widctlpar\keep\keepn\ltrpar\li720\lin720\fi-360\ri0\rin0\tx360\tx720\tx1080\tx1440\tx2880 {\f2\lang1033 \tab }{\f2\lang1033 1.\tab }}}{\pard \s965 \widctlpar\keep\keepn\ls10\ilvl0\ltrpar\li720\lin720\fi-360\ri0\rin0\tx360\tx720\tx1080\tx1440\tx2880 {\f4\b\lang1033 Save the Makefile.am with the new content}{\f2\lang1033 . After saving, you will need to rebuild the project at the command line, of course, for the changes to be built into the app. See the {\f4\b Building Adapt It from the Command Line} section above. In most cases you only need to call the {\f4\b make} command to rebuild after editing Makefile.am. In some rare cases, or if there is a build error, you may need to execute the {\f6\fs20\b autogen.sh} script from within the {\f6\fs20\b adaptit/bin/linux/} directory followed by the usual {\f6\fs20\b ../configure} and {\f6\fs20\b make} calls from within the {\f6\fs20\b adaptit/bin/linux/build_debug/} directory.\f0
\par
}}{\listtext {\pard \s965 \widctlpar\keep\keepn\ltrpar\li720\lin720\fi-360\ri0\rin0\tx360\tx720\tx1080\tx1440\tx2880 {\f2\lang1033 \tab }{\f2\lang1033 2.\tab }}}{\pard \s965 \widctlpar\keep\keepn\ls11\ilvl0\ltrpar\li720\lin720\fi-360\ri0\rin0\tx360\tx720\tx1080\tx1440\tx2880 {\f4\b\lang1033 Commit the changed Makefile.am and Makefile.in files to the repository using the svn client}{\f2\lang1033 . Open a Terminal and execute the following commands to first display any changed files, and then commit the appropriate ones to the external svn repository:\line \line {\f6\fs20\b cd ~/adaptit\line svn st\line \line }Look at the list of changed files (which have a {\f6\fs20\b M} at the left of their relative path). If you want to commit all changed files (marked with an {\f6\fs20\b M}), you can simply invoke svn as follows:\line
\line {\f6\fs20\b svn commit -m"Comment ..."\line \line }If, however, you only want to specify certain changed files you can do so using wild cards or by including path/filename path/filename \u8230
? on the command line, as shown in the following examples:\line \line {\f6\fs20\b svn commit source/Adapt_It* -m"Comment ..."\line \line }or{\f6\fs20\b \line \line svn commit source/Adapt_It.cpp source/helpers.h -m"Comment ..."\line }\f0
\par
}}{\listtext {\*\bkmkstart _Toc4d108bd9}{\pard \s970 \keep\keepn\sb240\sa60\ltrpar\li720\lin720\fi-720\ri0\rin0\tx720\tx1440\tx2880 {\f2\lang1033 \tab }{\f2\lang1033 \u9642 ?\tab }}}{\pard \s970 \keep\keepn\sb240\sa60\ls5\ilvl2\ltrpar\li720\lin720\fi-720\ri0\rin0\tx720\tx1440\tx2880 {\f2\lang1033 \tab {\f5\fs28\b\i Building and Running Adapt It from the {\*\bkmkend Bookmark5}}{\f1\fs26\b the CodeBlocks IDE{\*\bkmkend _Toc4d108bd9\nisustcf68 }}\f3
\par
}}{\pard \s965 \keep\keepn\sa120\ltrpar {\f2\lang1033 CodeBlocks should be installed on your system if you followed the instructions in the {\f4\b Fast Setup using apt-get command line} section near the beginning of this document. \f0
\par
\f2 To use CodeBlocks to build Adapt It, simply do the following:\f0 \par
{\li720\lin720\fi-360\ri0\rin0\tx360\tx720\tx1080\tx1440\tx2880 \f2 1.\tab Run CodeBlocks. From the Unity Dash home, start typing CodeBlocks in the Search bar, and click on the CodeBlocks icon. \f0 \par
\f2 2.\tab {\f4\b Open the adaptit.cbp project}. From within CodeBlocks click on File > Open, and navigate to your {\f6\fs20\b ~/adaptit/bin/linux/} folder. Click on the {\f6\fs20\b adaptit.cbp} file and Click {\f4\b Open}.\f0
\par
\f2 3.\tab {\f4\b Build Adapt It}. Set the \ldblquote Build target\rdblquote  to either {\f4\b Debug} or {\f4\b Release}.  Other possible targets may appear in the project, but normally you won\rquote
t need to use them.  (They\rquote re for building Adapt It against other versions of wxWidgets than the one installed by default in Ubuntu, and we describe this process later in the Appendix.)  So just choose either Debug or Release.  Now select {\f4\b Clean} from the {\f4\b Build} menu, and then {\f4\b Build} from the {\f4\b Build} menu (or Ctrl+F9, or click on the sprocket shaped icon at the left end of the CodeBlocks toolbar). Note: The builds are always Unicode on Linux even though the \ldblquote
Build target\rdblquote  indicates just \ldblquote Debug\rdblquote  or \ldblquote Release.\rdblquote \f0 \par
}\f2 If CodeBlocks generates a compile error about a missing function or symbol, it might be that a developer has forgotten to update the CodeBlocks project after adding one or more new source files to the CodeBlocks project (for example, after adding them to Visual Studio on the Windows platform or Xcode on the Mac platform). See the next section on adding or removing source files from the CodeBlocks project.\f0
\par
}}{\listtext {\*\bkmkstart _Toc66188802}{\pard \s970 \keep\keepn\sb240\sa60\ltrpar\li720\lin720\fi-720\ri0\rin0\tx720\tx1440\tx2880 {\f2\lang1033 \tab }{\f2\lang1033 \u9642 ?\tab }}}{\pard \s970 \keep\keepn\sb240\sa60\ls5\ilvl2\ltrpar\li720\lin720\fi-720\ri0\rin0\tx720\tx1440\tx2880 {\f2\lang1033 \tab {\*\bkmkstart Bookmark6}{\f1\fs26\b Adding or Removing Source Files from the CodeBlocks Project{\*\bkmkend _Toc66188802\nisustcf68 }}\f3
\par
}}{\pard \s965 \keep\keepn\sa120\ltrpar {\f2\lang1033 Occasionally, new source files need to be added to the CodeBlocks adaptit project, or existing source files need to be removed from the project to keep the Linux CodeBlocks project in sync with the other development environments. The inventory of files can get out of sync if a developer adds or removes source files in one of the other developer tools (on a different platform) and that developer is not able for some reason to update the project\rquote s files that are included in the Linux CodeBlocks project).\f0 \par
{\li720\lin720\fi-360\ri0\rin0\tx360\tx720\tx1080\tx1440\tx2880 \f2 1.\tab {\f4\b To add new source files} to the CodeBlocks adaptit project, select {\f4\b Project > Add files\u8230 ?} and navigate to the {\f6\fs18\b adaptit/source} folder. Select the files to be added and click on the Open button. In the Multiple Selection dialog verify that both Debug and Release have ticks in their check boxes and click OK. The source files are now part of the CodeBlocks adaptit project. \f0
\par
\f2 2.\tab {\f4\b To remove existing source files }from the CodeBlocks adaptit project, the preferred (and safest) way is to select the {\f4\b Projects} tab of the {\f4\b Management} window. Open the {\f4\b Sources} > {\f4\b source} tree and remove the appropriate cpp source file by right-clicking on the file name and selecting \ldblquote
{\f4\b Remove file from project}.\rdblquote  Similarly, open the {\f4\b Headers} > {\f4\b source} tree and remove the corresponding .h file by right-clicking on the file name and selecting \ldblquote
{\f4\b Remove file from project}.\rdblquote  \line \line If you need to remove many files at once you can do so utilizing the Project > Remove files.. menu selection. But {\f4\b beware} \endash
 this Multiple selection dialog is dangerous! All files in the entire project are selected by default! Before you click on the OK button, you will need to {\f4\b first click on the \ldblquote Deselect All\rdblquote  button}, then use the \ldblquote
Wildcard select\rdblquote  button and select the files that are to be deleted by entering a wild card, or just scroll through the lengthy list and manually selecting the files to be removed by ticking the appropriate check boxes. \f0 \par
\f2 3.\tab {\f4\b Remember to commit the changed CodeBlocks project (adaptit.cbp) file to the repository using the svn client.} Open a Terminal and execute the following commands to first display any changed files, and then commit the appropriate ones to the external svn repository:\line
{\f6\fs20\b cd ~/adaptit}\line {\f6\fs20\b svn st\line \line }Look at the list of changed files (which have a {\f6\fs20\b M} at the left of their relative path). If you want to commit all changed files (marked with an {\f6\fs20\b M}), you can simply invoke svn as follows:\line
\line {\f6\fs20\b svn commit -m"Comment ..."}\line \line If, however, you only want to specify certain changed files you can do so using wild cards or by including path/filename path/filename \u8230
? on the command line, as shown in the following examples:\line {\f6\fs20\b \line \fs18 svn commit source/Adapt_It* -m"Comment ..."\line \line }or{\f6\fs18\b \line \line svn commit source/Adapt_It.cpp source/helpers.h -m"Comment ..."}\f0
\par
}}}{\listtext {\*\bkmkstart _Toc15e155ba}{\pard \s970 \keep\keepn\sb240\sa60\ltrpar\li720\lin720\fi-720\ri0\rin0\tx720\tx1440\tx2880 {\f2\lang1033 \tab }{\f2\lang1033 \u9642 ?\tab }}}{\pard \s970 \keep\keepn\sb240\sa60\ls5\ilvl2\ltrpar\li720\lin720\fi-720\ri0\rin0\tx720\tx1440\tx2880 {\f2\lang1033 \tab {\*\bkmkend Bookmark6}{\f1\fs26\b Working with Subversion on Linux (after initial adaptit checkout):{\*\bkmkend _Toc15e155ba\nisustcf68 }}\f3
\par
}}{\pard \s965 \keep\keepn\sa120\ltrpar {\f2\lang1033 Some IDEs are supposed to be capable of working with Subversion internally, but I've not tried to get svn working internally within CodeBlocks or any other Linux IDE. I've just used Subversion from the command line (as demonstrated above) when working on the Linux port.\f0 \par
\f2 The initial checkout of the adaptit project\rquote s repository tree was described above in the {\f4\b Checking out the adaptit project from GoogleCode} section of this document.\f0
\par
\f2 You may want to use one or more of the following common Subversion commands at the command line (from within the {\f6\fs20\b ~/adaptit/} project folder):\f0 \par
{\f4\b \tab \f6\fs20 svn checkout https://adaptit.googlecode.com/svn/trunk adaptit }\par
{\li720\lin720\fi720\ri0\rin0\tx720\tx1440 {\f6\fs20\b --username <user>@gmail.com}\par
}{\f4\b \tab \f6\fs20 svn update}\par
{\f4\b \tab \f6\fs20 svn st}\par
{\f4\b \tab \f6\fs20 svn diff source/<filename>}\par
{\f4\b \tab \f6\fs20 svn ci -m"comment ..." [only with adaptit commit rights]}\par
{\f4\b \tab \f6\fs20 svn add source/<filename> [only with adaptit member commit rights]}\par
{\f4\b \tab \f6\fs20 svn remove source/<filename> [only with adaptit member commit rights]}\par
\f2
Note: The {\f4\b svn add} and {\f4\b svn remove} commands must be followed by a {\f4\b svn ci} command to commit the additions or removals in the external repository.\f0 \par
{\f4\b 1.}\f2
 {\f4\b svn\f6\fs20  checkout ...} I described how to do the initial checkout using Subversion in the instructions above. The command should only be done from your home directory. If ever you needed to delete a previous checkout of the project and re-checkout the project because of Subversion getting hopelessly confused or fouled up, you can delete the whole adaptit project tree from your local machine and checkout the project again. Usually, though you would only do a checkout once on a given computer.\f0
\par
{\f4\b 2.}\f2  {\f6\fs20\b svn update}. You should invoke this command often to keep your sources up to date. The {\f6\fs20\b svn update} command will go through the usual process of comparing your files with those on GoogleCode's svn server, updating any changes made by other users, merging if necessary, etc., and reporting the same single letter codes used in TortoiseSVN on Windows. \f0
\par
{\f4\b 3.}\f2  {\f6\fs20\b svn st}. The {\f6\fs20\b svn st} (or {\f6\fs20\b status}) command will tell you which versioned files in your local working copy have been changed, added or removed (marked with an {\f6\fs20\b M, A, or R)} in the {\f6\fs20\b svn st} output). To avoid possible conflicts it is a good idea to always do a quick {\f6\fs20\b svn st} before you do an {\f6\fs20\b svn update} command from the {\f6\fs20\b ~/adaptit/} folder. The reason is you will be reminded of any temporary changes you may have made to your sources in your working copy, and will have a chance to revert them if desired before you get an{\f6\fs20\b  svn} {\f6\fs20\b update}.\f0
\par
{\f4\b 4.}\f2  {\f6\fs20\b svn revert <file>}. The svn revert command will revert any pending changes in the file named <file> (marked with an {\f6\fs20\b M} in the {\f6\fs20\b svn st} output). The file will revert to its former content that it had before you made any local changes to it in your working copy. If you are thinking of doing an {\f6\fs20\b svn revert} command it is handy to first do the {\f6\fs20\b svn st} command, which will remind you of what files have changed and show you the relative path you should prefix the <file>\rquote
s name with for the {\f6\fs20\b svn revert <file>} command.\f0 \par
{\f4\b 5. \f6\fs20 svn ci -m"comment ..."}\f2 . The {\f6\fs20\b svn ci} (or {\f6\fs20\b svn commit}) command commits your changes to the repository. You should always do an {\f6\fs20\b svn update} {\ul before} you do a {\f6\fs20\b svn commit}. The commit command also takes a little more explanation. Usually you would use the -m"comment \u8230
?" to add a comment explaining the nature of the commit. If you only type {\f6\fs20\b svn ci} at the command line (without a comment), it opens the GNU {\f6\fs20\b nano} editor for you to enter the text of a comment for the commit command. After typing a comment in the nano editor, just press {\f4\b Ctrl-X} to exit the editor; then {\f4\b y} to permit it to use the temporary file it created for the svn comment, or {\f4\b n} to abort the commit process. The output details the results of the commit. \f0
\par
\f2 If you only want to commit changes to the repository for a single file or two (regardless of changes to other source files) you can optionally include one or more paths and filenames, for example (if invoked from within the {\f6\fs20\b ~/adaptit/} folder):\f0
\par
{\f4\b \tab \f6\fs20 svn ci source/Adapt_It.h source/helpers.cpp -m"comment"}\par
\f2 Where "comment" would tell what you've changed in Adapt_It.h.\f0 \par
{\f4\b 6.}\f2  {\f6\fs20\b svn diff ~/adaptit/source/<filename>}. The diff command requires that you enter the path and name of the file you want to diff. The diff will compare the file on your local machine to the one currently in the svn repository. The results are output to the command line terminal in plain text format. You basically look for the lines preceded by {\f4\b -} and {\f4\b +} to see the changes ({\f4\b +} lines are additions, {\f4\b -} lines are removed lines).\f0
\par
{\f4\b 7.}\f2  {\f6\fs20\b svn add ~/adaptit/source/<filename>}. The add command works like it does in TortoiseSVN on Windows. The svn add command only marks the file to be added to the repository. You have to follow up with an {\f6\fs20\b svn ci -m"comment ..."} command for the file to be actually added to the remote repository.\f0
\par
{\f4\b 8.}\f2  {\f6\fs20\b svn remove ~/adaptit/source/<filename>}. The remove command likewise, works like it does in TortoiseSVN on Windows. Again, you have to follow up with an {\f6\fs20\b svn ci -m"comment ..."} command for the file to be actually removed from the remote repository.\f0
\par
\par
}}{\pard \s976 \qc\keep\keepn\sb240\sa60\ltrpar {\f1\fs32\b\lang1033 APPENDIX\par
}}{\listtext {\*\bkmkstart _Toc4c6be90a}{\pard \s969 \keep\keepn\sb240\sa60\ltrpar\li576\lin576\fi-576\ri0\rin0\tx576\tx1152\tx2304 {\f2\lang1033 \tab }{\f2\lang1033 \u9702 ?\tab }}}{\pard \s969 \keep\keepn\sb240\sa60\ls5\ilvl1\ltrpar\li576\lin576\fi-576\ri0\rin0\tx576\tx1152\tx2304 {\f2\lang1033 \tab {\*\bkmkstart Bookmark7}{\f5\fs28\b\i Downloading a specific version of the wxWidgets library for experimentation on Linux (optional){\*\bkmkend _Toc4c6be90a\nisustcf68 }}\f3
\par
}}{\pard \s965 \keep\keepn\sa120\ltrpar {\f2\lang1033 The following steps make reference to versions{\f4\b  svn,} {\f4\b 3.0.0},{\f4\b  2.9.5} and {\f4\b 2.8.12} of the wxWidgets library. If you download the latest test version, use svn; if you download the latest \ldblquote
stable\rdblquote  release use 3.0.0, or if you use the slightly older version currently packaged with Ubuntu, use 2.8.12\emdash substitute the appropriate version numbers for your case or download and build all of them if you want. The instructions below assume you will build the wxWidgets 3.0.0 library\'1f\'1f.\f0 \par
\f2 If you also want to build the latest test version, you\rquote ll have to use Subversion to obtain the latest revision.  To do this, assuming you have Subversion installed, follow these steps:\f0 \par
{\f4\b 1. }\f2
Open a terminal.  The current directory will be your home user directory.\f0 \par
{\f4\b 2.}\f2   Now type the following command:\f0 \par
}}{\pard \s965 \keep\keepn\ltrpar {\f6\fs20\b\lang1033 svn checkout http://svn.wxwidgets.org/svn/wx/wxWidgets/trunk wx-svn}{\lang1033 \par
{\sa120 \par
This will give you a wxWidgets directory containing the very latest test version.  We\rquote ve used the name \ldblquote wx-svn\rdblquote  and the instructions below will use this name, but you can actually call it anything you like, so long as you substitute your name where we\rquote ve used \ldblquote wx-svn\rdblquote  below.\par
If you wish to also use wxWidgets 2.8.12, {\nisusselected1 2.9.}5 or 3.0.0, follow these instructions:\par
{\f4\b 1.}\f2
 In your browser go to }}}{\field {\*\fldinst HYPERLINK "http://sourceforge.net/projects/wxwindows/files/"}{\fldrslt {\pard \s965 \keep\keepn\sa120\ltrpar {\cs981 \f4\b\ul\cf1\lang1033 http://sourceforge.net/projects/wxwindows/files/}}}}{\pard \s965 \keep\keepn\sa120\ltrpar {\lang1033  and click on the link reflecting the version you want to build for special build purposes. For our purposes here we choose the current {\f6\fs20\b wxWidgets-3.0.0.tar.bz2}\f2
 download.\f0 \par
{\f4\b 2.}\f2  Click on OK to "Open with Archive Manager." \f0 \par
{\f4\b 3.}\f2  While the Archive Manager is still open, click on the "Extract" button near the top. In the "Places" list in the left side of the dialog that pops up, click on your home user directory if it is not already selected (in my case it is "wmartin", but your own user directory), and click on the "Extract" button at bottom right. The Archive Manager (similar to Winzip in Windows) extracts the tarball placing everything in a folder called {\f4\b wxWidgets-3.0.0} located in your home {\f4\b user} folder. Close the Archive Manager.\par
\f0
If you want the earlier 2.8.12 or 2.9.5 version, click on the directory with the appropriate version number to enter that directory, choose the \f4 wxWidgets-x.x.x{\b .tar.bz2}\f2  file\f0
 to download, and follow the same steps.  This will give you a folder \f4 wxWidgets-2.8.12 \f2 or {\f4\b wxWidgets-2.9.5}.  You can download both if you wish.\f0 \par
}}{\listtext {\*\bkmkstart _Toc3725016b}{\pard \s969 \keep\keepn\sb240\sa60\ltrpar\li576\lin576\fi-576\ri0\rin0\tx576\tx1152\tx2304 {\f2\lang1033 \tab }{\f2\lang1033 \u9702 ?\tab }}}{\pard \s969 \keep\keepn\sb240\sa60\ls5\ilvl1\ltrpar\li576\lin576\fi-576\ri0\rin0\tx576\tx1152\tx2304 {\f2\lang1033 \tab {\*\bkmkend Bookmark7}{\f5\fs28\b\i Compile and build the wxWidgets library (optional){\*\bkmkend _Toc3725016b\nisustcf68 }}\f3
\par
}}{\pard \s965 \keep\keepn\sa120\ltrpar {\f2\lang1033 Note: It is entirely optional to build special or experimental versions of the wxWidgets library and use them to link together with Adapt It. One possible reason for doing this might be if an obscure bug turns up and you want to step the Debugger right into the wxWidgets library code.  This requires you to link Adapt It together with a version of wxWidgets that has been built from source on your system, so the Debugger can find the source files and display them correctly.\f0 \par
\f2 This Appendix tells how to set this up. These instructions assume you have used {\f6\fs20\b sudo apt-get} to install all of the developer packages as described in the {\f4\b Fast Setup using apt-get command line} section of the main document above.\f0
\par
}}{\listtext {\*\bkmkstart _Toc1eb3e3b7}{\pard \s970 \keep\keepn\sb240\sa60\ltrpar\li720\lin720\fi-720\ri0\rin0\tx720\tx1440\tx2880 {\f2\lang1033 \tab }{\f2\lang1033 \u9642 ?\tab }}}{\pard \s970 \keep\keepn\sb240\sa60\ls5\ilvl2\ltrpar\li720\lin720\fi-720\ri0\rin0\tx720\tx1440\tx2880 {\f2\lang1033 \tab {\*\bkmkstart Bookmark8}{\f1\fs26\b Building the Unicode Debug version of the wxWidgets library (optional){\*\bkmkend _Toc1eb3e3b7\nisustcf68 }}\f3
\par
}}{\pard \s965 \keep\keepn\sa120\ltrpar {\f2\lang1033 OK, let's get the latest wxWidgets 3.0.0 library compiled and ready to go. We will be creating the binary library files for two configurations of the library: {\f4\b Unicode Debug} and {\f4\b Unicode Release} (we only support Unicode on the non-Windows platforms). We'll keep the different configurations of the library in separate child directories within the wxWidgets library tree that we downloaded and extracted now residing in the directory at: {\f6\fs20\b ~/wxWidgets-3.0.0/}. \f0
\par
{\f4\b 1.}\f2  Change to the wxWidgets-3.0.0 folder by giving the following command:\f0 \par
\f2 \tab {\f6\fs20\b cd ~/wxWidgets-3.0.0}\f0 \par
{\f4\b 2.}\f2  A copy of the setup.h header file designed for the GTK toolkit needs to be copied to the right place for our Linux platform.  Open a terminal in this current folder, and type this command:\par
\tab
{\f4\b cp include/wx/gtk/setup.h include/wx/setup.h}\f0 \par
\f2 If instead of version 3.0.0 you are using the latest repository version of wxWidgets, the file setup.h won\rquote t already exist.  So instead of the above command, from within your wx-svn directory type the following two commands:\f0
\par
{\f6\fs20\b \tab cp include/wx/gtk/setup0.h include/wx/gtk/setup.h\line }\f2 \tab {\f6\fs20\b cp include/wx/gtk/setup0.h include/wx/setup.h}\par
Note: Experimentation shows that the setup.h file needs to be in both of the above directories for successful builds of the wxWidgets library and for successful builds of Adapt It against that library.\par
{\f6\fs20\b \line \f4\fs24 3.} Also from within the wxWidgets-3.0.0 directory, create a folder called {\f6\fs20\b buildgtkud} for the Unicode Debug build of the library, by typing the following command:\f0
\par
{\f4\b \tab \f6\fs20 mkdir buildgtkud}\par
{\f4\b 4.}\f2  Change into the {\f6\fs20\b buildgtkud} directory by typing:\f0 \par
{\f4\b \tab \f6\fs20 cd buildgtkud}\par
{\f4\b 5.}\f2
 The wxWidgets download uses a huge configure script to create an appropriate make files for building the library on a given machine. We'll use some options to tell configure that we want to create a {\f4\b Unicode} library and that it should also be a {\f4\b debug} version. Since we are invoking the configure script located in the parent directory of the directory we are currently located in, we prefix the command with {\f6\fs20\b ../} so now type the following long command (Note that the option parameters all begin with two dashes and have a single dash in the middle):\f0
\par
{\li720\lin720\fi0\ri0\rin0\tx720 {\f6\fs18\b ../configure --with-gtk --enable-debug --enable-aui --with-gnomeprint --enable-monolithic --enable-unicode --disable-compat28}\par
}\f2
If all is well, configure will display a bunch of messages as it checks the programming environment of the computer and configures various settings. It is normal to see a few WARNINGs, but there should not be any ERRORs in the output. Near the end of its output it will actually say it is creating the wxWidgets sample programs; and finally it should display a summary at the end (scroll back through the output to insure there were no errors). Note: I\rquote ve used the {\f6\fs20\b --enable-monolithic} option which puts all of the wxWidgets library components in a single dynamic library ({\f6\fs20\b .so}) file. This is a temporary measure for the 2.9.5 library in order to be able to get its {\f6\fs20\b wx-config --libs}  script to include the wxAui library module when configuring the Adapt It builds (see below).\par
If you are doing a build of version 2.8.12, omit the parameter --disable-compat28.\f0
\par
\f2 If configure reported errors, check that you\rquote ve installed everything with the {\f6\fs20\b sudo apt-get install} command as described in the {\f4\b Fast Setup using apt-get command line} section, and that there are no typos in the {\f6\fs20\b ../configure}\f7
\fs20 ...\f2\fs24  command line, and repeat the {\f6\fs20\b ../config}\f7\fs20 ...\f2\fs24  command line call (above) until it completes successfully without errors.\f0 \par
{\f4\b 6.}\f2
 Now, actually create the library binaries by typing the following at the command line:\f0 \par
{\f4\b \tab \f6\fs20 make}\par
\f2 \tab The library build process will take a while. You\rquote
ll see the verbose output from the make process dancing around on the screen. The make command runs the Makefile which invokes the g++ compiler (with many command line parameters!) on the scores of source files building them into the wxWidgets libraries.\f0 \par
\f2 Since we are creating a special or experimental wxWidgets library for development we will be keeping the libraries created in local folders rather than installing the wxWidgets library into the system-wide software locations. Therefore, we will {\f4\b NOT} install the wxWidgets libraries system-wide by typing something like  \f7
\fs20 sudo make install \f2\fs24 followed by \f7\fs20 sudo ldconfig\f2\fs24 ). Instead, if working in a IDE (CodeBlocks), the IDE itself can be configured to supply the location of the wxWidgets libraries for debug and for release builds using:\f0 \par
{\f6\fs20\b \tab --with-wx-config=<path>}\par
\f2
option on our calls to the configure script as part of its build process. More about that in the section on CodeBlocks below.\f0 \par
\f2 The Unicode Debug build of the wxWidgets library is now finished. \f0 \par
\f2 Note: Although the basic steps for creating each build of the wxWidgets library (and in general any software on Unix/Linux systems) are: \line \tab (1) {\f4\b configure\line \tab }(2) {\f4\b make}\line
\tab (3) {\f4\b sudo make install\line \tab }(4) {\f4\b sudo ldconfig\line }but we won't do steps (3) and (4) for our wxWidgets library builds, because we don\rquote t want the library binaries to take the place of the older libraries that come with our distribution by default \endash
 we are keeping the newer libraries separate and available only for experimental builds of Adapt It against that newer library \endash  for normal use we want to keep the default builds of Adapt It building dynamically against the current distro\rquote s default wxWidgets library (2.8.12).\f0 \par
\f2 Next let's build the Unicode Release library.\f0 \par
}}{\listtext {\*\bkmkstart _Toc3e1b7c69}{\pard \s970 \keep\keepn\sb240\sa60\ltrpar\li720\lin720\fi-720\ri0\rin0\tx720\tx1440\tx2880 {\f2\lang1033 \tab }{\f2\lang1033 \u9642 ?\tab }}}{\pard \s970 \keep\keepn\sb240\sa60\ls5\ilvl2\ltrpar\li720\lin720\fi-720\ri0\rin0\tx720\tx1440\tx2880 {\f2\lang1033 \tab {\*\bkmkend Bookmark8}{\f1\fs26\b Building the Unicode Release version of the wxWidgets library (optional){\*\bkmkend _Toc3e1b7c69\nisustcf68 }}\f3
\par
}}{\pard \s965 \keep\keepn\sa120\ltrpar {\f2\lang1033 Note that if you are building wxWidgets to enable you to step into the wxWidgets code for locating an obscure bug, there\rquote s no point in building a Release version.  But if you wish to, read on.  Building the Unicode Release version is very similar to the 6 steps for the Unicode Debug version above, but we create a different folder name for the build and leave out the \f7\fs20 --enable-debug\f2\fs24  parameter in the configure command. Here are the steps (see above for detailed explanations):\f0 \par
{\f4\b \tab \f6\fs20 cd ..}\par
\f2
\tab {\f6\fs20\b cd wxWidgets-3.0.0}\f0 \par
{\f4\b \tab \f6\fs20 mkdir buildgtku}\par
{\f4\b \tab \f6\fs20 cd buildgtku}\par
{\f4\fs18\b \tab \f6 ../configure --with-gtk --enable-aui --with-gnomeprint --enable-monolithic --enable-unicode --disable-compat28}\par
{\f4\b \tab \f6\fs20 make}\par
\f2
The Unicode Release build of the wxWidgets library is now finished. \f0 \par
}}{\listtext {\*\bkmkstart _Toc670db206}{\pard \s970 \keep\keepn\sb240\sa60\ltrpar\li720\lin720\fi-720\ri0\rin0\tx720\tx1440\tx2880 {\f2\lang1033 \tab }{\f2\lang1033 \u9642 ?\tab }}}{\pard \s970 \keep\keepn\sb240\sa60\ls5\ilvl2\ltrpar\li720\lin720\fi-720\ri0\rin0\tx720\tx1440\tx2880 {\f2\lang1033 \tab {\*\bkmkstart Bookmark9}{\f1\fs26\b Building Adapt It Against your Custom/Locally Built wxWidgets Library (optional){\*\bkmkend _Toc670db206\nisustcf68 }}\f3
\par
}}{\pard \s965 \keep\keepn\sa120\ltrpar {\f2\lang1033 Again, this is an entirely {\f4\b optional} thing to do. Development work normally builds Adapt It against whatever version of the wxWidgets dynamic library that comes with a particular distribution of Linux (currently 2.8.12). The following description is for those developers who want to build Adapt It on Linux against a {\f4\b special build of wxWidgets}, or a {\f4\b newer version of wxWidgets} (3.0.0) than is available out of the box in a particular distribution of Linux.\f0
\par
\f2 Building Adapt It against a locally built wxWidgets library mainly involves pointing the build tools (or CodeBlocks\rquote  build settings if using CodeBlocks) to use the locally built wxWidgets 3.0.0 binaries.\f0 \par
\f2 This section assumes you have already followed the previous sections in this Appendix under the \ldblquote Compile and Build the wxWidgets library (optional)\rdblquote  heading, which placed the build products for the Unicode Debug build in the {\f6\fs20\b ~/wxWidgets-3.0.0/buildgtkud} directory, and placed the build products for the Unicode Release build in the {\f6\fs20\b ~/wxWidgets-3.0.0/buildgtku} directory.\f0
\par
\f2 This section also assumes you have already followed the section above under the heading \ldblquote Building and Running Adapt It from the Command Line.\rdblquote  In that section you created a build directory at: {\f6\fs20\b ~/adaptit/bin/linux/build_debug} and {\f6\fs20\b ~/adaptit/bin/linux/build_release} to contain the build products for dynamic linking with whatever wxWidgets library (2.8.12) was available by default in the current linux distribution. In the steps below we will create two additional directories within the {\f6\fs20\b ~/adaptit/bin/linux/} folder. They will be named {\f6\fs20\b build_300_debug} and {\f6\fs20\b build_300_release}. These directories will contain the build products for builds of Adapt It against the newer wxWidgets 3.0.0 library. We won\rquote
t touch the {\f6\fs20\b ~/adaptit/bin/linux/build_debug} or {\f6\fs20\b ~/adaptit/bin/linux/build_release} directories which will continue to contain the build products for linking against the default wxWidgets 2.8.12 dynamic library.\f0
\par
\f2 Change to the adaptit/bin/linux/ directory:\line {\f4\b \tab \f6\fs20 cd ~/adaptit/bin/linux}\f0 \par
\f2 Create the two directories to hold the build products for debug and release:\f0
\par
{\f4\b \tab \f6\fs20 mkdir build_300_debug\line \tab mkdir build_300_release}\par
\f2 Change to the debug directory:\line {\f4\b \tab \f6\fs20 cd build_300_debug}\f0 \par
\f2 Configure the adaptit project by specifying where the wx-config script for the custom wxWidgets library is to be found: \f0
\par
\f7\fs18 \tab {\f6\b ../configure --enable-debug --with-wx-config=/home/<user>/wxWidgets-3.0.0/buildgtkud/wx-config}\f0\fs24 \par
\f2 Note: In this case too we are calling the configure script (located the parent linux directory), from our current {\f6\fs20\b build_300_debug} directory (substitute your user name for {\f6\fs20\b <user>})\f7
\fs20 .\f2\fs24  The {\f6\fs20\b --enable-debug} option makes it a debug build. The {\f6\fs20\b --with-wx-config=/home/...} option specifies the path to the actual wx-config script for the custom wxWdigets-3.0.0 library build that we want to use in building Adapt It.\f0
\par
\f2 We can verify that the new library will be used by typing:\f0 \par
{\f6\fs20\b \tab /home/<user>/wxWidgets-3.0.0/buildgtkud/wx-config --version}\par
\f2 again substituting your user name for <user>. The output should show the new wxWidgets library version number as: {\f6\fs20\b 3.0.0.}\f0
\par
\f2 Finally, build adaptit for the above configuration by invoking make:\f0 \par
{\f6\fs18\b \tab make}\par
\f2 The application sources should be compiled and linked against the wxWidgets-3.0.0 dynamic libraries located in the {\f6\fs20\b ~/wxWidgets-3.0.0/buildgtkud/lib/} folder.\f0
\par
\f2 You can then run Adapt It from the current directory by calling:\f0 \par
{\f6\fs18\b \tab ./adaptit}\par
\f2 Configuring and building the {\f4\b release} version of Adapt It is similar, but is done from the {\f6\fs20\b build_300_release} directory. In this case the configure script does {\f4\b not} call {\f6\fs20\b --enable-debug}, and it points to the {\f6\fs20\b wxWidgets-3.0.0/buildgtku/wx-config} script:\f0
\par
{\f4\b \tab \f6\fs20 cd ~/adaptit/build_300_release\line }\f7\fs18 \tab {\f6\b ../configure \endash -with-wx-config=/home/<user>/wxWidgets-3.0.0/buildgtku/wx-config\line \tab make}\f0
\fs24 \par
\f2 You can then run Adapt It from the current directory by calling:\f0 \par
{\f6\fs18\b \tab ./adaptit}\par
\par
}}{\listtext {\*\bkmkstart _Toc31950741}{\pard \s969 \keep\keepn\sb240\sa60\ltrpar\li576\lin576\fi-576\ri0\rin0\tx576\tx1152\tx2304 {\f2\lang1033 \tab }{\f2\lang1033 \u9702 ?\tab }}}{\pard \s969 \keep\keepn\sb240\sa60\ls5\ilvl1\ltrpar\li576\lin576\fi-576\ri0\rin0\tx576\tx1152\tx2304 {\f2\lang1033 \tab {\*\bkmkend Bookmark9}{\f5\fs28\b\i  If configure or make fails - run the autotools{\*\bkmkend _Toc31950741\nisustcf68 }}\f3
\par
}}{\pard \s965 \keep\keepn\sa120\ltrpar {\f2\lang1033 The adaptit project at GoogleCode should have included at checkout, the current Linux build files necessary to build the adaptit application. If you need to reconfigure the Linux command line build tools, that can be done by running a group of tools called autotools at the command line from the {\f6\fs20\b adaptit/bin/linux} directory, in order to get the command line build environment set up. Historically these tools were developed in order to somewhat automate the process of creating "make" files which are capable of building programs that will run correctly on any of the variety of unix-type systems. It is hard to explain everything the autotools do (but I\rquote
ve briefly summarized them below).\f0 \par
{\f4\b 1.}\f2  Go to the linux project directory by typing the following at the command line:\f0 \par
{\f4\b \tab \f6\fs20 cd}\par
{\f4\b \tab \f6\fs20 cd adaptit/bin/linux}\par
{\f4\b 2.}\f2
 Now, invoking the following commands in succession:\f0 \par
{\f4\b \tab \f6\fs20 libtoolize --force --copy}\par
{\f4\b \tab \f6\fs20 aclocal}\par
{\f4\b \tab \f6\fs20 touch NEWS README AUTHORS ChangeLog}\par
{\f4\b \tab \f6\fs20 autoconf \f4\fs24   }\par
{\f4\b \tab \f6\fs20 automake --add-missing}\par
\f2
In case you are interested, here is a very rough summary of what the above calls do:\f0 \par
\f2 \tab {\f6\fs20\b libtoolize --force --copy} - The libtool package contains the GNU libtool, a set of shell scripts which automatically configure UNIX and UNIX-like architectures to generically build shared libraries.  Libtool provides a consistent, portable interface which simplifies the process of using shared libraries. libtoolize also creates the ltmain.sh symbolic link. The --force and --copy command options make libtoolize replace existing libtool files, and copy files from the libtool data directory rather than creating symlinks. These options can help to prevent build problems due to the system having different versions of the libtool utility.\f0
\par
\f2 \tab {\f6\fs20\b aclocal}\f7\fs20  \f2\fs24 - aclocal generates an aclocal.m4 file that contains definitions of all m4 macros required by autoconf (see below).\f0 \par
\f2 \tab
{\f6\fs20\b touch NEWS README AUTHORS ChangeLog} - the touch command creates the files listed in the command, if they don't already exist. If they already exists the accessed or modification times are updated to all be the current date/time. This is done to make the automake command happy (see about automake below).\f0
\par
\f2 \tab {\f6\fs20\b autoconf}\f7\fs20  \f2\fs24 - creates a "configure" script that can be called by the user to build a program/package on any kind of unix/linux system. autoconf uses a list of features that the program needs and which are contained in a \f7
\fs20 configure.in\f2\fs24  file.\f0 \par
\f2 \tab {\f6\fs20\b automake --add-missing}  - automake automatically creates the Makefile.in file(s) from Makefile.am file(s). Makefile.am files are essentially a list of the source files (.h and .cpp) using a simple syntax (we need to change Makefile.am any time we add or remove source files from the adaptit project \endash
 then run automake again from the command line. Makefile.in files are in a form that feeds {\f4\b in }to the make command. The --add-missing option helps to insure that certain common files exist in certain situations, if they were not distributed with the version of automake on the current system.\f0
\par
\f2 I have tried to be careful to use only relative paths within CodeBlocks project file ({\f6\fs20\b adaptit.cbp}) so that it should be able to work essentially without modification on any system that is set up following the procedures in this document. Hence, the {\f6\fs20\b adaptit.cbp} project file is included in the svn repository and will be located within the {\f6\fs20\b adaptit/bin/linux} folder created during a Subversion checkout operation.\f0
\par
}}{\listtext {\*\bkmkstart _Toc51a651ca}{\pard \s970 \keep\keepn\sb240\sa60\ltrpar\li720\lin720\fi-720\ri0\rin0\tx720\tx1440\tx2880 {\f2\lang1033 \tab }{\f2\lang1033 \u9642 ?\tab }}}{\pard \s970 \keep\keepn\sb240\sa60\ls5\ilvl2\ltrpar\li720\lin720\fi-720\ri0\rin0\tx720\tx1440\tx2880 {\f2\lang1033 \tab {\f1\fs26\b Using CodeBlocks to build Adapt It against a custom/locally built wxWidgets library{\*\bkmkend _Toc51a651ca\nisustcf68 }}\f3
\par
}}{\pard \s965 \keep\keepn\sa120\ltrpar {\f2\lang1033 The first step is to tell CodeBlocks the location of your custom wxWidgets directory.  Under Windows we use the WXWIN environment variable, but CodeBlocks is unreliable in dealing with environment variables, so instead we use symbolic links.  These are the Linux equivalents of shortcuts on Windows or aliases on the Mac.  The easiest way to create a symbolic link (also called a symlink) is in the File Manager, to drag the icon for a file to another location.  A drop-down menu then appears, and one of the options is \ldblquote Link here\rdblquote . \f0 \par
\f2 We\rquote re going to create symbolic links for wxWidgets svn repository version, 3.0.0, 2.9.5 and 2.8.12.  By giving them specific names and putting them in a specific place, the CodeBlocks project will be able to locate them and link that version of wxWidgets to Adapt It.  If you didn\rquote t download all these versions of wxWidgets, just ignore the steps involving the ones you didn\rquote t download.\f0 \par
\f2 1. In the File Manager, open a window into your home folder.\f0 \par
\f2 2. Drag the icon for wxWidgets-svn to somewhere else in the folder, and choose \ldblquote Link here\rdblquote  from the drop-down menu.  \f0 \par
\f2 3. A \ldblquote rename\rdblquote  dialog will come up.  Rename the link to \ldblquote wx-svn\rdblquote .\f0 \par
\f2 4. Drag the icon for wxWidgets-3.0.0 to somewhere else in the folder, and choose \ldblquote Link here\rdblquote .\f0 \par
\f2 5. Rename the link to \ldblquote wx30\rdblquote .\par
6. Drag the icon for wxWidgets-2.9.5 to somewhere else in the folder, and choose \ldblquote Link here\rdblquote .\f0 \par
\f2 7. Rename the link to \ldblquote wx29\rdblquote .\par
8. Drag the icon for wxWidgets-2.8.12 to somewhere else in the folder, and choose \ldblquote Link here\rdblquote .\f0 \par
\f2 9. Rename the link to \ldblquote wx28\rdblquote .\par
We now need to move these symbolic links to your Root directory.  (The home directories for different users will have different names, but the Root directory always has a blank name, so the CodeBlocks project can always locate it.)\f0 \par
\f2 6. Open a Terminal window (which should have your home directory as its initial current directory).  \f0 \par
\f2 7. Type this command:\f0 \par
}}{\pard \s965 \keep\keepn\ltrpar {\f8\b\lang1033 sudo cp -d wx-svn /wx-svn}{\lang1033 \par
{\sa120 \f2 Type your password when prompted.  The Root directory needs superuser permissions to write to it, which is why we need to use sudo.\f0 \par
\f2 8. Now similarly type\f0 \par
{\f8\b sudo cp -d wx30 /wx30\par
sudo cp -d wx29 /wx29}\par
{\f8\b sudo cp -d wx28 /wx28}\par
\f2
Once you\rquote ve completed these steps, you won\rquote t normally need to repeat them.  Even if you use Subversion to update your copy of wxWidgets-svn and rebuild it, the directory locations remain the same, so the symbolic links don\rquote t need to change.  You can also delete the original symbolic links in your home directory if you want to.\f0 \par
\f2 9. Open the {\f4\b adaptit.cbp} project in CodeBlocks.  Previously you set the \ldblquote
Build target\rdblquote  to either Debug or Release, but now you can choose DebugWX2.8, DebugWX2.9, DebugWX3.0 or DebugWX-svn.  We don\rquote t need Release build targets for these other wxWidgets versions, since we only use them for debugging or testing.  If you\rquote ve followed the above steps successfully, you should get a successful build of Adapt It against the version of wxWidgets that you chose, and if debugging you should be able to step right into the source code for wxWidgets.\f0 \par
\par
\par
\par
\par
}{\qc\sa120 \f2 End of Documentation\par }}}}